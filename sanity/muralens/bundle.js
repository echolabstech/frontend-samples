/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./fetch-neighborhoods.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./fetch-neighborhoods.js":
/*!********************************!*\
  !*** ./fetch-neighborhoods.js ***!
  \********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("const sanityClient = __webpack_require__(/*! @sanity/client */ \"./node_modules/@sanity/client/lib/sanityClient.js\")\nconst client = sanityClient({\n  projectId: 'mjtpwlkb',\n  dataset: 'development'\n});\n\n// client.fetch(\n//   '*[_type == $type]', // Query\n//   {type: 'neighborhood'} // Params (optional)\n// )\nfetch('locations.json')\n.then(res => {\n  console.log('all neighborhoods: ', res);\n  debugger;\n})\n.catch(err => {\n  console.error('Oh no, error occured: ', err);\n});\n\n//# sourceURL=webpack:///./fetch-neighborhoods.js?");

/***/ }),

/***/ "./node_modules/@sanity/client/lib/assets/assetsClient.js":
/*!****************************************************************!*\
  !*** ./node_modules/@sanity/client/lib/assets/assetsClient.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar assign = __webpack_require__(/*! object-assign */ \"./node_modules/object-assign/index.js\");\nvar queryString = __webpack_require__(/*! ../http/queryString */ \"./node_modules/@sanity/client/lib/http/queryString.js\");\nvar validators = __webpack_require__(/*! ../validators */ \"./node_modules/@sanity/client/lib/validators.js\");\n\nfunction AssetsClient(client) {\n  this.client = client;\n}\n\nfunction toPromise(observable) {\n  return observable.filter(function (event) {\n    return event.type === 'response';\n  }).map(function (event) {\n    return event.body;\n  }).toPromise();\n}\n\nfunction resolveWithDocument(body) {\n  // todo: rewrite to just return body.document in a while\n  var document = body.document;\n  Object.defineProperty(document, 'document', {\n    enumerable: false,\n    get: function get() {\n      // eslint-disable-next-line no-console\n      console.warn('The promise returned from client.asset.upload(...) now resolves with the asset document');\n      return document;\n    }\n  });\n  return document;\n}\n\nfunction optionsFromFile(opts, file) {\n  if (typeof window === 'undefined' || !(file instanceof window.File)) {\n    return opts;\n  }\n\n  return assign({\n    filename: opts.preserveFilename === false ? undefined : file.name,\n    contentType: file.type\n  }, opts);\n}\n\nassign(AssetsClient.prototype, {\n  /**\n   * Upload an asset\n   *\n   * @param  {String} assetType `image` or `file`\n   * @param  {File|Blob|Buffer|ReadableStream} body File to upload\n   * @param  {Object}  opts Options for the upload\n   * @param  {Boolean} opts.preserveFilename Whether or not to preserve the original filename (default: true)\n   * @param  {String}  opts.filename Filename for this file (optional)\n   * @param  {Number}  opts.timeout  Milliseconds to wait before timing the request out (default: 0)\n   * @param  {String}  opts.contentType Mime type of the file\n   * @param  {Array}   opts.extract Array of metadata parts to extract from image.\n   *                                 Possible values: `location`, `exif`, `image`, `palette`\n   * @return {Promise} Resolves with the created asset document\n   */\n  upload: function upload(assetType, body) {\n    var opts = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    validators.validateAssetType(assetType);\n\n    // If an empty array is given, explicitly set `none` to override API defaults\n    var meta = opts.extract || undefined;\n    if (meta && !meta.length) {\n      meta = ['none'];\n    }\n\n    var dataset = validators.hasDataset(this.client.clientConfig);\n    var assetEndpoint = assetType === 'image' ? 'images' : 'files';\n    var options = optionsFromFile(opts, body);\n    var label = options.label,\n        filename = options.filename;\n\n    var query = { label: label, filename: filename, meta: meta };\n\n    var observable = this.client._requestObservable({\n      method: 'POST',\n      timeout: options.timeout || 0,\n      uri: '/assets/' + assetEndpoint + '/' + dataset,\n      headers: options.contentType ? { 'Content-Type': options.contentType } : {},\n      query: query,\n      body: body\n    });\n\n    return this.client.isPromiseAPI() ? toPromise(observable).then(resolveWithDocument) : observable;\n  },\n  delete: function _delete(type, id) {\n    // eslint-disable-next-line no-console\n    console.warn('client.assets.delete() is deprecated, please use client.delete(<document-id>)');\n\n    var docId = id || '';\n    if (!/^(image|file)-/.test(docId)) {\n      docId = type + '-' + docId;\n    } else if (type._id) {\n      // We could be passing an entire asset document instead of an ID\n      docId = type._id;\n    }\n\n    validators.hasDataset(this.client.clientConfig);\n    return this.client.delete(docId);\n  },\n  getImageUrl: function getImageUrl(ref, query) {\n    var id = ref._ref || ref;\n    if (typeof id !== 'string') {\n      throw new Error('getImageUrl() needs either an object with a _ref, or a string with an asset document ID');\n    }\n\n    if (!/^image-[A-Za-z0-9_]+-\\d+x\\d+-[a-z]{1,5}$/.test(id)) {\n      throw new Error('Unsupported asset ID \"' + id + '\". URL generation only works for auto-generated IDs.');\n    }\n\n    var _id$split = id.split('-'),\n        _id$split2 = _slicedToArray(_id$split, 4),\n        assetId = _id$split2[1],\n        size = _id$split2[2],\n        format = _id$split2[3];\n\n    validators.hasDataset(this.client.clientConfig);\n    var _client$clientConfig = this.client.clientConfig,\n        projectId = _client$clientConfig.projectId,\n        dataset = _client$clientConfig.dataset;\n\n    var qs = query ? queryString(query) : '';\n    return 'https://cdn.sanity.io/images/' + projectId + '/' + dataset + '/' + assetId + '-' + size + '.' + format + qs;\n  }\n});\n\nmodule.exports = AssetsClient;\n\n//# sourceURL=webpack:///./node_modules/@sanity/client/lib/assets/assetsClient.js?");

/***/ }),

/***/ "./node_modules/@sanity/client/lib/auth/authClient.js":
/*!************************************************************!*\
  !*** ./node_modules/@sanity/client/lib/auth/authClient.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar assign = __webpack_require__(/*! object-assign */ \"./node_modules/object-assign/index.js\");\n\nfunction AuthClient(client) {\n  this.client = client;\n}\n\nassign(AuthClient.prototype, {\n  getLoginProviders: function getLoginProviders() {\n    return this.client.request({ uri: '/auth/providers' });\n  },\n  logout: function logout() {\n    return this.client.request({ uri: '/auth/logout', method: 'POST' });\n  }\n});\n\nmodule.exports = AuthClient;\n\n//# sourceURL=webpack:///./node_modules/@sanity/client/lib/auth/authClient.js?");

/***/ }),

/***/ "./node_modules/@sanity/client/lib/config.js":
/*!***************************************************!*\
  !*** ./node_modules/@sanity/client/lib/config.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar generateHelpUrl = __webpack_require__(/*! @sanity/generate-help-url */ \"./node_modules/@sanity/generate-help-url/index.js\");\nvar assign = __webpack_require__(/*! object-assign */ \"./node_modules/object-assign/index.js\");\nvar validate = __webpack_require__(/*! ./validators */ \"./node_modules/@sanity/client/lib/validators.js\");\n\nvar defaultCdnHost = 'apicdn.sanity.io';\nvar defaultConfig = {\n  apiHost: 'https://api.sanity.io',\n  useProjectHostname: true,\n  gradientMode: false,\n  isPromiseAPI: true\n};\n\nvar cdnWarning = ['You are not using the Sanity CDN. That means your data is always fresh, but the CDN is faster and', 'cheaper. Think about it! For more info, see ' + generateHelpUrl('js-client-cdn-configuration') + '.', 'To hide this warning, please set the `useCdn` option to either `true` or `false` when creating', 'the client.'];\n\nvar printCdnWarning = function () {\n  var hasWarned = false;\n  return function () {\n    if (hasWarned) {\n      return;\n    }\n\n    // eslint-disable-next-line no-console\n    console.warn(cdnWarning.join(' '));\n    hasWarned = true;\n  };\n}();\n\nexports.defaultConfig = defaultConfig;\n\nexports.initConfig = function (config, prevConfig) {\n  var newConfig = assign({}, defaultConfig, prevConfig, config);\n  var gradientMode = newConfig.gradientMode;\n  var projectBased = !gradientMode && newConfig.useProjectHostname;\n\n  if (typeof Promise === 'undefined') {\n    var helpUrl = generateHelpUrl('js-client-promise-polyfill');\n    throw new Error('No native Promise-implementation found, polyfill needed - see ' + helpUrl);\n  }\n\n  if (gradientMode && !newConfig.namespace) {\n    throw new Error('Configuration must contain `namespace` when running in gradient mode');\n  }\n\n  if (projectBased && !newConfig.projectId) {\n    throw new Error('Configuration must contain `projectId`');\n  }\n\n  if (typeof newConfig.useCdn === 'undefined') {\n    printCdnWarning();\n  }\n\n  if (projectBased) {\n    validate.projectId(newConfig.projectId);\n  }\n\n  if (!gradientMode && newConfig.dataset) {\n    validate.dataset(newConfig.dataset, newConfig.gradientMode);\n  }\n\n  newConfig.isDefaultApi = newConfig.apiHost === defaultConfig.apiHost;\n  newConfig.useCdn = Boolean(newConfig.useCdn) && !newConfig.token && !newConfig.withCredentials;\n\n  if (newConfig.gradientMode) {\n    newConfig.url = newConfig.apiHost;\n    newConfig.cdnUrl = newConfig.apiHost;\n  } else {\n    var hostParts = newConfig.apiHost.split('://', 2);\n    var protocol = hostParts[0];\n    var host = hostParts[1];\n    var cdnHost = newConfig.isDefaultApi ? defaultCdnHost : host;\n\n    if (newConfig.useProjectHostname) {\n      newConfig.url = protocol + '://' + newConfig.projectId + '.' + host + '/v1';\n      newConfig.cdnUrl = protocol + '://' + newConfig.projectId + '.' + cdnHost + '/v1';\n    } else {\n      newConfig.url = newConfig.apiHost + '/v1';\n      newConfig.cdnUrl = newConfig.url;\n    }\n  }\n\n  return newConfig;\n};\n\n//# sourceURL=webpack:///./node_modules/@sanity/client/lib/config.js?");

/***/ }),

/***/ "./node_modules/@sanity/client/lib/data/dataMethods.js":
/*!*************************************************************!*\
  !*** ./node_modules/@sanity/client/lib/data/dataMethods.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar assign = __webpack_require__(/*! object-assign */ \"./node_modules/object-assign/index.js\");\nvar validators = __webpack_require__(/*! ../validators */ \"./node_modules/@sanity/client/lib/validators.js\");\nvar getSelection = __webpack_require__(/*! ../util/getSelection */ \"./node_modules/@sanity/client/lib/util/getSelection.js\");\nvar encodeQueryString = __webpack_require__(/*! ./encodeQueryString */ \"./node_modules/@sanity/client/lib/data/encodeQueryString.js\");\nvar Transaction = __webpack_require__(/*! ./transaction */ \"./node_modules/@sanity/client/lib/data/transaction.js\");\nvar Patch = __webpack_require__(/*! ./patch */ \"./node_modules/@sanity/client/lib/data/patch.js\");\nvar listen = __webpack_require__(/*! ./listen */ \"./node_modules/@sanity/client/lib/data/listen.js\");\n\nvar excludeFalsey = function excludeFalsey(param, defValue) {\n  var value = typeof param === 'undefined' ? defValue : param;\n  return param === false ? undefined : value;\n};\n\nvar getMutationQuery = function getMutationQuery() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  return {\n    returnIds: true,\n    returnDocuments: excludeFalsey(options.returnDocuments, true),\n    visibility: options.visibility || 'sync'\n  };\n};\n\nvar isResponse = function isResponse(event) {\n  return event.type === 'response';\n};\nvar getBody = function getBody(event) {\n  return event.body;\n};\n\nvar toPromise = function toPromise(observable) {\n  return observable.toPromise();\n};\n\nvar getQuerySizeLimit = 11264;\n\nmodule.exports = {\n  listen: listen,\n\n  getDataUrl: function getDataUrl(operation, path) {\n    var config = this.clientConfig;\n    var catalog = config.gradientMode ? config.namespace : validators.hasDataset(config);\n    var baseUri = '/' + operation + '/' + catalog;\n    var uri = path ? baseUri + '/' + path : baseUri;\n    return (this.clientConfig.gradientMode ? uri : '/data' + uri).replace(/\\/($|\\?)/, '$1');\n  },\n  fetch: function fetch(query, params) {\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    var mapResponse = options.filterResponse === false ? function (res) {\n      return res;\n    } : function (res) {\n      return res.result;\n    };\n\n    var observable = this._dataRequest('query', { query: query, params: params }).map(mapResponse);\n    return this.isPromiseAPI() ? toPromise(observable) : observable;\n  },\n  getDocument: function getDocument(id) {\n    var options = { uri: this.getDataUrl('doc', id), json: true };\n    var observable = this._requestObservable(options).filter(isResponse).map(function (event) {\n      return event.body.documents && event.body.documents[0];\n    });\n\n    return this.isPromiseAPI() ? toPromise(observable) : observable;\n  },\n  create: function create(doc, options) {\n    return this._create(doc, 'create', options);\n  },\n  createIfNotExists: function createIfNotExists(doc, options) {\n    validators.requireDocumentId('createIfNotExists', doc);\n    return this._create(doc, 'createIfNotExists', options);\n  },\n  createOrReplace: function createOrReplace(doc, options) {\n    validators.requireDocumentId('createOrReplace', doc);\n    return this._create(doc, 'createOrReplace', options);\n  },\n  patch: function patch(selector, operations) {\n    return new Patch(selector, operations, this);\n  },\n  delete: function _delete(selection, options) {\n    return this.dataRequest('mutate', { mutations: [{ delete: getSelection(selection) }] }, options);\n  },\n  mutate: function mutate(mutations, options) {\n    var mut = mutations instanceof Patch ? mutations.serialize() : mutations;\n    var muts = Array.isArray(mut) ? mut : [mut];\n\n    return this.dataRequest('mutate', { mutations: muts, transactionId: options && options.transactionId }, options);\n  },\n  transaction: function transaction(operations) {\n    return new Transaction(operations, this);\n  },\n  dataRequest: function dataRequest(endpoint, body) {\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    var request = this._dataRequest(endpoint, body, options);\n\n    return this.isPromiseAPI() ? toPromise(request) : request;\n  },\n  _dataRequest: function _dataRequest(endpoint, body) {\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    var isMutation = endpoint === 'mutate';\n\n    // Check if the query string is within a configured threshold,\n    // in which case we can use GET. Otherwise, use POST.\n    var strQuery = !isMutation && encodeQueryString(body);\n    var useGet = !isMutation && strQuery.length < getQuerySizeLimit;\n    var stringQuery = useGet ? strQuery : '';\n    var returnFirst = options.returnFirst;\n\n    var uri = this.getDataUrl(endpoint, stringQuery);\n\n    var reqOptions = {\n      method: useGet ? 'GET' : 'POST',\n      uri: uri,\n      json: true,\n      body: useGet ? undefined : body,\n      query: isMutation && getMutationQuery(options)\n    };\n\n    return this._requestObservable(reqOptions).filter(isResponse).map(getBody).map(function (res) {\n      if (!isMutation) {\n        return res;\n      }\n\n      // Should we return documents?\n      var results = res.results || [];\n      if (options.returnDocuments) {\n        return returnFirst ? results[0] && results[0].document : results.map(function (mut) {\n          return mut.document;\n        });\n      }\n\n      // Return a reduced subset\n      var key = returnFirst ? 'documentId' : 'documentIds';\n      var ids = returnFirst ? results[0] && results[0].id : results.map(function (mut) {\n        return mut.id;\n      });\n      return _defineProperty({\n        transactionId: res.transactionId,\n        results: results\n      }, key, ids);\n    });\n  },\n  _create: function _create(doc, op) {\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    var mutation = _defineProperty({}, op, doc);\n    var opts = assign({ returnFirst: true, returnDocuments: true }, options);\n    return this.dataRequest('mutate', { mutations: [mutation] }, opts);\n  }\n};\n\n//# sourceURL=webpack:///./node_modules/@sanity/client/lib/data/dataMethods.js?");

/***/ }),

/***/ "./node_modules/@sanity/client/lib/data/encodeQueryString.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@sanity/client/lib/data/encodeQueryString.js ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar enc = encodeURIComponent;\n\nmodule.exports = function (_ref) {\n  var query = _ref.query,\n      _ref$params = _ref.params,\n      params = _ref$params === undefined ? {} : _ref$params,\n      _ref$options = _ref.options,\n      options = _ref$options === undefined ? {} : _ref$options;\n\n  var base = \"?query=\" + enc(query);\n  var qString = Object.keys(params).reduce(function (qs, param) {\n    return qs + \"&\" + enc(\"$\" + param) + \"=\" + enc(JSON.stringify(params[param]));\n  }, base);\n\n  return Object.keys(options).reduce(function (qs, option) {\n    // Only include the option if it is truthy\n    return options[option] ? qs + \"&\" + enc(option) + \"=\" + enc(options[option]) : qs;\n  }, qString);\n};\n\n//# sourceURL=webpack:///./node_modules/@sanity/client/lib/data/encodeQueryString.js?");

/***/ }),

/***/ "./node_modules/@sanity/client/lib/data/listen.js":
/*!********************************************************!*\
  !*** ./node_modules/@sanity/client/lib/data/listen.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar assign = __webpack_require__(/*! object-assign */ \"./node_modules/object-assign/index.js\");\nvar Observable = __webpack_require__(/*! @sanity/observable/minimal */ \"./node_modules/@sanity/observable/minimal.js\");\nvar polyfilledEventSource = __webpack_require__(/*! @sanity/eventsource */ \"./node_modules/@sanity/eventsource/browser.js\");\nvar pick = __webpack_require__(/*! ../util/pick */ \"./node_modules/@sanity/client/lib/util/pick.js\");\nvar defaults = __webpack_require__(/*! ../util/defaults */ \"./node_modules/@sanity/client/lib/util/defaults.js\");\nvar encodeQueryString = __webpack_require__(/*! ./encodeQueryString */ \"./node_modules/@sanity/client/lib/data/encodeQueryString.js\");\n\nvar EventSource = typeof window !== 'undefined' && window.EventSource ? window.EventSource // Native browser EventSource\n: polyfilledEventSource; // Node.js, IE etc\n\nvar possibleOptions = ['includePreviousRevision', 'includeResult'];\nvar defaultOptions = {\n  includeResult: true\n};\n\nmodule.exports = function listen(query, params) {\n  var opts = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  var options = defaults(opts, defaultOptions);\n  var listenOpts = pick(options, possibleOptions);\n  var qs = encodeQueryString({ query: query, params: params, options: listenOpts });\n  var _clientConfig = this.clientConfig,\n      url = _clientConfig.url,\n      token = _clientConfig.token,\n      withCredentials = _clientConfig.withCredentials;\n\n\n  var uri = '' + url + this.getDataUrl('listen', qs);\n  var listenFor = options.events ? options.events : ['mutation'];\n  var shouldEmitReconnect = listenFor.indexOf('reconnect') !== -1;\n\n  var esOptions = {};\n  if (token || withCredentials) {\n    esOptions.withCredentials = true;\n  }\n\n  if (token) {\n    esOptions.headers = {\n      Authorization: 'Bearer ' + token\n    };\n  }\n\n  return new Observable(function (observer) {\n    var es = getEventSource();\n    var reconnectTimer = void 0;\n    var stopped = false;\n\n    function onError() {\n      if (stopped) {\n        return;\n      }\n\n      emitReconnect();\n\n      // Allow event handlers of `emitReconnect` to cancel/close the reconnect attempt\n      if (stopped) {\n        return;\n      }\n\n      // Unless we've explicitly stopped the ES (in which case `stopped` should be true),\n      // we should never be in a disconnected state. By default, EventSource will reconnect\n      // automatically, in which case it sets readyState to `CONNECTING`, but in some cases\n      // (like when a laptop lid is closed), it closes the connection. In these cases we need\n      // to explicitly reconnect.\n      if (es.readyState === EventSource.CLOSED) {\n        unsubscribe();\n        clearTimeout(reconnectTimer);\n        reconnectTimer = setTimeout(open, 100);\n      }\n    }\n\n    function onChannelError(err) {\n      observer.error(cooerceError(err));\n    }\n\n    function onMessage(evt) {\n      var event = parseEvent(evt);\n      return event instanceof Error ? observer.error(event) : observer.next(event);\n    }\n\n    function onDisconnect(evt) {\n      stopped = true;\n      unsubscribe();\n      observer.complete();\n    }\n\n    function unsubscribe() {\n      es.removeEventListener('error', onError, false);\n      es.removeEventListener('channelError', onChannelError, false);\n      es.removeEventListener('disconnect', onDisconnect, false);\n      listenFor.forEach(function (type) {\n        return es.removeEventListener(type, onMessage, false);\n      });\n      es.close();\n    }\n\n    function emitReconnect() {\n      if (shouldEmitReconnect) {\n        observer.next({ type: 'reconnect' });\n      }\n    }\n\n    function getEventSource() {\n      var evs = new EventSource(uri, esOptions);\n      evs.addEventListener('error', onError, false);\n      evs.addEventListener('channelError', onChannelError, false);\n      evs.addEventListener('disconnect', onDisconnect, false);\n      listenFor.forEach(function (type) {\n        return evs.addEventListener(type, onMessage, false);\n      });\n      return evs;\n    }\n\n    function open() {\n      es = getEventSource();\n    }\n\n    function stop() {\n      stopped = true;\n      unsubscribe();\n    }\n\n    return stop;\n  });\n};\n\nfunction parseEvent(event) {\n  try {\n    var data = event.data && JSON.parse(event.data) || {};\n    return assign({ type: event.type }, data);\n  } catch (err) {\n    return err;\n  }\n}\n\nfunction cooerceError(err) {\n  if (err instanceof Error) {\n    return err;\n  }\n\n  var evt = parseEvent(err);\n  return evt instanceof Error ? evt : new Error(extractErrorMessage(evt));\n}\n\nfunction extractErrorMessage(err) {\n  if (!err.error) {\n    return err.message || 'Unknown listener error';\n  }\n\n  if (err.error.description) {\n    return err.error.description;\n  }\n\n  return typeof err.error === 'string' ? err.error : JSON.stringify(err.error, null, 2);\n}\n\n//# sourceURL=webpack:///./node_modules/@sanity/client/lib/data/listen.js?");

/***/ }),

/***/ "./node_modules/@sanity/client/lib/data/patch.js":
/*!*******************************************************!*\
  !*** ./node_modules/@sanity/client/lib/data/patch.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar deepAssign = __webpack_require__(/*! deep-assign */ \"./node_modules/deep-assign/index.js\");\nvar assign = __webpack_require__(/*! object-assign */ \"./node_modules/object-assign/index.js\");\nvar getSelection = __webpack_require__(/*! ../util/getSelection */ \"./node_modules/@sanity/client/lib/util/getSelection.js\");\nvar validate = __webpack_require__(/*! ../validators */ \"./node_modules/@sanity/client/lib/validators.js\");\nvar validateObject = validate.validateObject;\nvar validateInsert = validate.validateInsert;\n\nfunction Patch(selection) {\n  var operations = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var client = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n\n  this.selection = selection;\n  this.operations = assign({}, operations);\n  this.client = client;\n}\n\nassign(Patch.prototype, {\n  clone: function clone() {\n    return new Patch(this.selection, assign({}, this.operations), this.client);\n  },\n  merge: function merge(props) {\n    validateObject('merge', props);\n    return this._assign('merge', deepAssign(this.operations.merge || {}, props));\n  },\n  set: function set(props) {\n    return this._assign('set', props);\n  },\n  diffMatchPatch: function diffMatchPatch(props) {\n    validateObject('diffMatchPatch', props);\n    return this._assign('diffMatchPatch', props);\n  },\n  unset: function unset(attrs) {\n    if (!Array.isArray(attrs)) {\n      throw new Error('unset(attrs) takes an array of attributes to unset, non-array given');\n    }\n\n    this.operations = assign({}, this.operations, { unset: attrs });\n    return this;\n  },\n  setIfMissing: function setIfMissing(props) {\n    return this._assign('setIfMissing', props);\n  },\n  replace: function replace(props) {\n    validateObject('replace', props);\n    return this._set('set', { $: props }); // eslint-disable-line id-length\n  },\n  inc: function inc(props) {\n    return this._assign('inc', props);\n  },\n  dec: function dec(props) {\n    return this._assign('dec', props);\n  },\n  insert: function insert(at, selector, items) {\n    var _assign;\n\n    validateInsert(at, selector, items);\n    return this._assign('insert', (_assign = {}, _defineProperty(_assign, at, selector), _defineProperty(_assign, 'items', items), _assign));\n  },\n  append: function append(selector, items) {\n    return this.insert('after', selector + '[-1]', items);\n  },\n  prepend: function prepend(selector, items) {\n    return this.insert('before', selector + '[0]', items);\n  },\n  splice: function splice(selector, start, deleteCount, items) {\n    // Negative indexes doesn't mean the same in Sanity as they do in JS;\n    // -1 means \"actually at the end of the array\", which allows inserting\n    // at the end of the array without knowing its length. We therefore have\n    // to substract negative indexes by one to match JS. If you want Sanity-\n    // behaviour, just use `insert('replace', selector, items)` directly\n    var delAll = typeof deleteCount === 'undefined' || deleteCount === -1;\n    var startIndex = start < 0 ? start - 1 : start;\n    var delCount = delAll ? -1 : Math.max(0, start + deleteCount);\n    var delRange = startIndex < 0 && delCount >= 0 ? '' : delCount;\n    var rangeSelector = selector + '[' + startIndex + ':' + delRange + ']';\n    return this.insert('replace', rangeSelector, items || []);\n  },\n  ifRevisionId: function ifRevisionId(rev) {\n    this.operations.ifRevisionID = rev;\n    return this;\n  },\n  serialize: function serialize() {\n    return assign(getSelection(this.selection), this.operations);\n  },\n  toJSON: function toJSON() {\n    return this.serialize();\n  },\n  commit: function commit() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    if (!this.client) {\n      throw new Error('No `client` passed to patch, either provide one or pass the ' + 'patch to a clients `mutate()` method');\n    }\n\n    var returnFirst = typeof this.selection === 'string';\n    var opts = assign({ returnFirst: returnFirst, returnDocuments: true }, options);\n    return this.client.mutate({ patch: this.serialize() }, opts);\n  },\n  reset: function reset() {\n    this.operations = {};\n    return this;\n  },\n  _set: function _set(op, props) {\n    return this._assign(op, props, false);\n  },\n  _assign: function _assign(op, props) {\n    var merge = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n\n    validateObject(op, props);\n    this.operations = assign({}, this.operations, _defineProperty({}, op, assign({}, merge && this.operations[op] || {}, props)));\n    return this;\n  }\n});\n\nmodule.exports = Patch;\n\n//# sourceURL=webpack:///./node_modules/@sanity/client/lib/data/patch.js?");

/***/ }),

/***/ "./node_modules/@sanity/client/lib/data/transaction.js":
/*!*************************************************************!*\
  !*** ./node_modules/@sanity/client/lib/data/transaction.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar assign = __webpack_require__(/*! object-assign */ \"./node_modules/object-assign/index.js\");\nvar validators = __webpack_require__(/*! ../validators */ \"./node_modules/@sanity/client/lib/validators.js\");\nvar Patch = __webpack_require__(/*! ./patch */ \"./node_modules/@sanity/client/lib/data/patch.js\");\n\nvar defaultMutateOptions = { returnDocuments: false };\n\nfunction Transaction() {\n  var operations = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var client = arguments[1];\n  var transactionId = arguments[2];\n\n  this.trxId = transactionId;\n  this.operations = operations;\n  this.client = client;\n}\n\nassign(Transaction.prototype, {\n  clone: function clone() {\n    return new Transaction(this.operations.slice(0), this.client, this.trxId);\n  },\n  create: function create(doc) {\n    validators.validateObject('create', doc);\n    return this._add({ create: doc });\n  },\n  createIfNotExists: function createIfNotExists(doc) {\n    var op = 'createIfNotExists';\n    validators.validateObject(op, doc);\n    validators.requireDocumentId(op, doc);\n    return this._add(_defineProperty({}, op, doc));\n  },\n  createOrReplace: function createOrReplace(doc) {\n    var op = 'createOrReplace';\n    validators.validateObject(op, doc);\n    validators.requireDocumentId(op, doc);\n    return this._add(_defineProperty({}, op, doc));\n  },\n  delete: function _delete(documentId) {\n    validators.validateDocumentId('delete', documentId);\n    return this._add({ delete: { id: documentId } });\n  },\n  patch: function patch(documentId, patchOps) {\n    var isBuilder = typeof patchOps === 'function';\n    var isPatch = documentId instanceof Patch;\n\n    // transaction.patch(client.patch('documentId').inc({visits: 1}))\n    if (isPatch) {\n      return this._add({ patch: documentId.serialize() });\n    }\n\n    // patch => patch.inc({visits: 1}).set({foo: 'bar'})\n    if (isBuilder) {\n      var patch = patchOps(new Patch(documentId, {}, this.client));\n      if (!(patch instanceof Patch)) {\n        throw new Error('function passed to `patch()` must return the patch');\n      }\n\n      return this._add({ patch: patch.serialize() });\n    }\n\n    return this._add({ patch: assign({ id: documentId }, patchOps) });\n  },\n  transactionId: function transactionId(id) {\n    if (!id) {\n      return this.trxId;\n    }\n\n    this.trxId = id;\n    return this;\n  },\n  serialize: function serialize() {\n    return this.operations.slice();\n  },\n  toJSON: function toJSON() {\n    return this.serialize();\n  },\n  commit: function commit(options) {\n    if (!this.client) {\n      throw new Error('No `client` passed to transaction, either provide one or pass the ' + 'transaction to a clients `mutate()` method');\n    }\n\n    return this.client.mutate(this.serialize(), assign({ transactionId: this.trxId }, defaultMutateOptions, options || {}));\n  },\n  reset: function reset() {\n    this.operations = [];\n    return this;\n  },\n  _add: function _add(mut) {\n    this.operations.push(mut);\n    return this;\n  }\n});\n\nmodule.exports = Transaction;\n\n//# sourceURL=webpack:///./node_modules/@sanity/client/lib/data/transaction.js?");

/***/ }),

/***/ "./node_modules/@sanity/client/lib/datasets/datasetsClient.js":
/*!********************************************************************!*\
  !*** ./node_modules/@sanity/client/lib/datasets/datasetsClient.js ***!
  \********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar assign = __webpack_require__(/*! object-assign */ \"./node_modules/object-assign/index.js\");\nvar validate = __webpack_require__(/*! ../validators */ \"./node_modules/@sanity/client/lib/validators.js\");\n\nfunction DatasetsClient(client) {\n  this.request = client.request.bind(client);\n}\n\nassign(DatasetsClient.prototype, {\n  create: function create(name, options) {\n    return this._modify('PUT', name, options);\n  },\n  edit: function edit(name, options) {\n    return this._modify('PATCH', name, options);\n  },\n  delete: function _delete(name) {\n    return this._modify('DELETE', name);\n  },\n  list: function list() {\n    return this.request({ uri: '/datasets' });\n  },\n  _modify: function _modify(method, name, body) {\n    validate.dataset(name);\n    return this.request({ method: method, uri: '/datasets/' + name, body: body });\n  }\n});\n\nmodule.exports = DatasetsClient;\n\n//# sourceURL=webpack:///./node_modules/@sanity/client/lib/datasets/datasetsClient.js?");

/***/ }),

/***/ "./node_modules/@sanity/client/lib/http/browserMiddleware.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@sanity/client/lib/http/browserMiddleware.js ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nmodule.exports = [];\n\n//# sourceURL=webpack:///./node_modules/@sanity/client/lib/http/browserMiddleware.js?");

/***/ }),

/***/ "./node_modules/@sanity/client/lib/http/errors.js":
/*!********************************************************!*\
  !*** ./node_modules/@sanity/client/lib/http/errors.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar makeError = __webpack_require__(/*! make-error */ \"./node_modules/make-error/index.js\");\nvar assign = __webpack_require__(/*! object-assign */ \"./node_modules/object-assign/index.js\");\n\nfunction ClientError(res) {\n  var props = extractErrorProps(res);\n  ClientError.super.call(this, props.message);\n  assign(this, props);\n}\n\nfunction ServerError(res) {\n  var props = extractErrorProps(res);\n  ServerError.super.call(this, props.message);\n  assign(this, props);\n}\n\nfunction extractErrorProps(res) {\n  var body = res.body;\n  var props = {\n    response: res,\n    statusCode: res.statusCode,\n    responseBody: stringifyBody(body, res)\n\n    // API/Boom style errors ({statusCode, error, message})\n  };if (body.error && body.message) {\n    props.message = body.error + ' - ' + body.message;\n    return props;\n  }\n\n  // Query/database errors ({error: {description, other, arb, props}})\n  if (body.error && body.error.description) {\n    props.message = body.error.description;\n    props.details = body.error;\n    return props;\n  }\n\n  // Other, more arbitrary errors\n  props.message = body.error || body.message || httpErrorMessage(res);\n  return props;\n}\n\nfunction httpErrorMessage(res) {\n  var statusMessage = res.statusMessage ? ' ' + res.statusMessage : '';\n  return res.method + '-request to ' + res.url + ' resulted in HTTP ' + res.statusCode + statusMessage;\n}\n\nfunction stringifyBody(body, res) {\n  var contentType = (res.headers['content-type'] || '').toLowerCase();\n  var isJson = contentType.indexOf('application/json') !== -1;\n  return isJson ? JSON.stringify(body, null, 2) : body;\n}\n\nmakeError(ClientError);\nmakeError(ServerError);\n\nexports.ClientError = ClientError;\nexports.ServerError = ServerError;\n\n//# sourceURL=webpack:///./node_modules/@sanity/client/lib/http/errors.js?");

/***/ }),

/***/ "./node_modules/@sanity/client/lib/http/queryString.js":
/*!*************************************************************!*\
  !*** ./node_modules/@sanity/client/lib/http/queryString.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nmodule.exports = function (params) {\n  var qs = [];\n  for (var key in params) {\n    if (params.hasOwnProperty(key)) {\n      qs.push(encodeURIComponent(key) + '=' + encodeURIComponent(params[key]));\n    }\n  }\n\n  return qs.length > 0 ? '?' + qs.join('&') : '';\n};\n\n//# sourceURL=webpack:///./node_modules/@sanity/client/lib/http/queryString.js?");

/***/ }),

/***/ "./node_modules/@sanity/client/lib/http/request.js":
/*!*********************************************************!*\
  !*** ./node_modules/@sanity/client/lib/http/request.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/* eslint-disable no-empty-function, no-process-env */\nvar getIt = __webpack_require__(/*! get-it */ \"./node_modules/get-it/index.js\");\nvar assign = __webpack_require__(/*! object-assign */ \"./node_modules/object-assign/index.js\");\nvar observable = __webpack_require__(/*! get-it/lib/middleware/observable */ \"./node_modules/get-it/lib/middleware/observable.js\");\nvar jsonRequest = __webpack_require__(/*! get-it/lib/middleware/jsonRequest */ \"./node_modules/get-it/lib/middleware/jsonRequest.js\");\nvar jsonResponse = __webpack_require__(/*! get-it/lib/middleware/jsonResponse */ \"./node_modules/get-it/lib/middleware/jsonResponse.js\");\nvar SanityObservable = __webpack_require__(/*! @sanity/observable/minimal */ \"./node_modules/@sanity/observable/minimal.js\");\nvar progress = __webpack_require__(/*! get-it/lib/middleware/progress */ \"./node_modules/get-it/lib/middleware/progress/index.js\");\n\nvar _require = __webpack_require__(/*! ./errors */ \"./node_modules/@sanity/client/lib/http/errors.js\"),\n    ClientError = _require.ClientError,\n    ServerError = _require.ServerError;\n\nvar httpError = {\n  onResponse: function onResponse(res) {\n    if (res.statusCode >= 500) {\n      throw new ServerError(res);\n    } else if (res.statusCode >= 400) {\n      throw new ClientError(res);\n    }\n\n    return res;\n  }\n\n  // Environment-specific middleware.\n};var envSpecific = __webpack_require__(/*! ./nodeMiddleware */ \"./node_modules/@sanity/client/lib/http/browserMiddleware.js\");\n\nvar middleware = envSpecific.concat([jsonRequest(), jsonResponse(), progress(), httpError, observable({ implementation: SanityObservable })]);\n\nvar request = getIt(middleware);\n\nfunction httpRequest(options) {\n  var requester = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : request;\n\n  return requester(assign({ maxRedirects: 0 }, options));\n}\n\nhttpRequest.defaultRequester = request;\nhttpRequest.ClientError = ClientError;\nhttpRequest.ServerError = ServerError;\n\nmodule.exports = httpRequest;\n\n//# sourceURL=webpack:///./node_modules/@sanity/client/lib/http/request.js?");

/***/ }),

/***/ "./node_modules/@sanity/client/lib/http/requestOptions.js":
/*!****************************************************************!*\
  !*** ./node_modules/@sanity/client/lib/http/requestOptions.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar projectHeader = 'X-Sanity-Project-ID';\n\nmodule.exports = function (config) {\n  var headers = {};\n\n  if (config.token) {\n    headers.Authorization = 'Bearer ' + config.token;\n  }\n\n  if (!config.useProjectHostname && config.projectId) {\n    headers[projectHeader] = config.projectId;\n  }\n\n  return {\n    headers: headers,\n    timeout: 'timeout' in config ? config.timeout : 30000,\n    json: true,\n    withCredentials: Boolean(config.token || config.withCredentials)\n  };\n};\n\n//# sourceURL=webpack:///./node_modules/@sanity/client/lib/http/requestOptions.js?");

/***/ }),

/***/ "./node_modules/@sanity/client/lib/projects/projectsClient.js":
/*!********************************************************************!*\
  !*** ./node_modules/@sanity/client/lib/projects/projectsClient.js ***!
  \********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar assign = __webpack_require__(/*! object-assign */ \"./node_modules/object-assign/index.js\");\n\nfunction ProjectsClient(client) {\n  this.client = client;\n}\n\nassign(ProjectsClient.prototype, {\n  list: function list() {\n    return this.client.request({ uri: '/projects' });\n  },\n  getById: function getById(id) {\n    return this.client.request({ uri: '/projects/' + id });\n  }\n});\n\nmodule.exports = ProjectsClient;\n\n//# sourceURL=webpack:///./node_modules/@sanity/client/lib/projects/projectsClient.js?");

/***/ }),

/***/ "./node_modules/@sanity/client/lib/sanityClient.js":
/*!*********************************************************!*\
  !*** ./node_modules/@sanity/client/lib/sanityClient.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar assign = __webpack_require__(/*! object-assign */ \"./node_modules/object-assign/index.js\");\nvar Patch = __webpack_require__(/*! ./data/patch */ \"./node_modules/@sanity/client/lib/data/patch.js\");\nvar Transaction = __webpack_require__(/*! ./data/transaction */ \"./node_modules/@sanity/client/lib/data/transaction.js\");\nvar dataMethods = __webpack_require__(/*! ./data/dataMethods */ \"./node_modules/@sanity/client/lib/data/dataMethods.js\");\nvar DatasetsClient = __webpack_require__(/*! ./datasets/datasetsClient */ \"./node_modules/@sanity/client/lib/datasets/datasetsClient.js\");\nvar ProjectsClient = __webpack_require__(/*! ./projects/projectsClient */ \"./node_modules/@sanity/client/lib/projects/projectsClient.js\");\nvar AssetsClient = __webpack_require__(/*! ./assets/assetsClient */ \"./node_modules/@sanity/client/lib/assets/assetsClient.js\");\nvar UsersClient = __webpack_require__(/*! ./users/usersClient */ \"./node_modules/@sanity/client/lib/users/usersClient.js\");\nvar AuthClient = __webpack_require__(/*! ./auth/authClient */ \"./node_modules/@sanity/client/lib/auth/authClient.js\");\nvar httpRequest = __webpack_require__(/*! ./http/request */ \"./node_modules/@sanity/client/lib/http/request.js\");\nvar getRequestOptions = __webpack_require__(/*! ./http/requestOptions */ \"./node_modules/@sanity/client/lib/http/requestOptions.js\");\n\nvar _require = __webpack_require__(/*! ./config */ \"./node_modules/@sanity/client/lib/config.js\"),\n    defaultConfig = _require.defaultConfig,\n    initConfig = _require.initConfig;\n\nvar toPromise = function toPromise(observable) {\n  return observable.toPromise();\n};\n\nfunction SanityClient() {\n  var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultConfig;\n\n  if (!(this instanceof SanityClient)) {\n    return new SanityClient(config);\n  }\n\n  this.config(config);\n\n  this.assets = new AssetsClient(this);\n  this.datasets = new DatasetsClient(this);\n  this.projects = new ProjectsClient(this);\n  this.users = new UsersClient(this);\n  this.auth = new AuthClient(this);\n\n  if (this.clientConfig.isPromiseAPI) {\n    var observableConfig = assign({}, this.clientConfig, { isPromiseAPI: false });\n    this.observable = new SanityClient(observableConfig);\n  }\n}\n\nassign(SanityClient.prototype, dataMethods);\nassign(SanityClient.prototype, {\n  clone: function clone() {\n    return new SanityClient(this.config());\n  },\n  config: function config(newConfig) {\n    if (typeof newConfig === 'undefined') {\n      return assign({}, this.clientConfig);\n    }\n\n    if (this.observable) {\n      var observableConfig = assign({}, newConfig, { isPromiseAPI: false });\n      this.observable.config(observableConfig);\n    }\n\n    this.clientConfig = initConfig(newConfig, this.clientConfig || {});\n    return this;\n  },\n  getUrl: function getUrl(uri) {\n    var canUseCdn = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n    var base = canUseCdn ? this.clientConfig.cdnUrl : this.clientConfig.url;\n    return base + '/' + uri.replace(/^\\//, '');\n  },\n  isPromiseAPI: function isPromiseAPI() {\n    return this.clientConfig.isPromiseAPI;\n  },\n  _requestObservable: function _requestObservable(options) {\n    var uri = options.url || options.uri;\n    var canUseCdn = this.clientConfig.useCdn && ['GET', 'HEAD'].indexOf(options.method || 'GET') >= 0 && uri.indexOf('/data/') === 0;\n\n    return httpRequest(mergeOptions(getRequestOptions(this.clientConfig), options, {\n      url: this.getUrl(uri, canUseCdn)\n    }), this.clientConfig.requester);\n  },\n  request: function request(options) {\n    var observable = this._requestObservable(options).filter(function (event) {\n      return event.type === 'response';\n    }).map(function (event) {\n      return event.body;\n    });\n\n    return this.isPromiseAPI() ? toPromise(observable) : observable;\n  }\n});\n\n// Merge http options and headers\nfunction mergeOptions() {\n  for (var _len = arguments.length, opts = Array(_len), _key = 0; _key < _len; _key++) {\n    opts[_key] = arguments[_key];\n  }\n\n  var headers = opts.reduce(function (merged, options) {\n    if (!merged && !options.headers) {\n      return null;\n    }\n    return assign(merged || {}, options.headers || {});\n  }, null);\n  return assign.apply(undefined, opts.concat([headers ? { headers: headers } : {}]));\n}\n\nSanityClient.Patch = Patch;\nSanityClient.Transaction = Transaction;\nSanityClient.ClientError = httpRequest.ClientError;\nSanityClient.ServerError = httpRequest.ServerError;\nSanityClient.requester = httpRequest.defaultRequester;\n\nmodule.exports = SanityClient;\n\n//# sourceURL=webpack:///./node_modules/@sanity/client/lib/sanityClient.js?");

/***/ }),

/***/ "./node_modules/@sanity/client/lib/users/usersClient.js":
/*!**************************************************************!*\
  !*** ./node_modules/@sanity/client/lib/users/usersClient.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar assign = __webpack_require__(/*! object-assign */ \"./node_modules/object-assign/index.js\");\n\nfunction UsersClient(client) {\n  this.client = client;\n}\n\nassign(UsersClient.prototype, {\n  getById: function getById(id) {\n    return this.client.request({ uri: '/users/' + id });\n  }\n});\n\nmodule.exports = UsersClient;\n\n//# sourceURL=webpack:///./node_modules/@sanity/client/lib/users/usersClient.js?");

/***/ }),

/***/ "./node_modules/@sanity/client/lib/util/defaults.js":
/*!**********************************************************!*\
  !*** ./node_modules/@sanity/client/lib/util/defaults.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nmodule.exports = function (obj, defaults) {\n  return Object.keys(defaults).concat(Object.keys(obj)).reduce(function (target, prop) {\n    target[prop] = typeof obj[prop] === 'undefined' ? defaults[prop] : obj[prop];\n\n    return target;\n  }, {});\n};\n\n//# sourceURL=webpack:///./node_modules/@sanity/client/lib/util/defaults.js?");

/***/ }),

/***/ "./node_modules/@sanity/client/lib/util/getSelection.js":
/*!**************************************************************!*\
  !*** ./node_modules/@sanity/client/lib/util/getSelection.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nmodule.exports = function getSelection(sel) {\n  if (typeof sel === 'string' || Array.isArray(sel)) {\n    return { id: sel };\n  }\n\n  if (sel && sel.query) {\n    return { query: sel.query };\n  }\n\n  var selectionOpts = ['* Document ID (<docId>)', '* Array of document IDs', '* Object containing `query`'].join('\\n');\n\n  throw new Error('Unknown selection - must be one of:\\n\\n' + selectionOpts);\n};\n\n//# sourceURL=webpack:///./node_modules/@sanity/client/lib/util/getSelection.js?");

/***/ }),

/***/ "./node_modules/@sanity/client/lib/util/pick.js":
/*!******************************************************!*\
  !*** ./node_modules/@sanity/client/lib/util/pick.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nmodule.exports = function (obj, props) {\n  return props.reduce(function (selection, prop) {\n    if (typeof obj[prop] === 'undefined') {\n      return selection;\n    }\n\n    selection[prop] = obj[prop];\n    return selection;\n  }, {});\n};\n\n//# sourceURL=webpack:///./node_modules/@sanity/client/lib/util/pick.js?");

/***/ }),

/***/ "./node_modules/@sanity/client/lib/validators.js":
/*!*******************************************************!*\
  !*** ./node_modules/@sanity/client/lib/validators.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar VALID_ASSET_TYPES = ['image', 'file'];\nvar VALID_INSERT_LOCATIONS = ['before', 'after', 'replace'];\n\nexports.dataset = function (name) {\n  if (!/^[-\\w]{1,128}$/.test(name)) {\n    throw new Error('Datasets can only contain lowercase characters, numbers, underscores and dashes');\n  }\n};\n\nexports.projectId = function (id) {\n  if (!/^[-a-z0-9]+$/i.test(id)) {\n    throw new Error('`projectId` can only contain only a-z, 0-9 and dashes');\n  }\n};\n\nexports.validateAssetType = function (type) {\n  if (VALID_ASSET_TYPES.indexOf(type) === -1) {\n    throw new Error('Invalid asset type: ' + type + '. Must be one of ' + VALID_ASSET_TYPES.join(', '));\n  }\n};\n\nexports.validateObject = function (op, val) {\n  if (val === null || (typeof val === 'undefined' ? 'undefined' : _typeof(val)) !== 'object' || Array.isArray(val)) {\n    throw new Error(op + '() takes an object of properties');\n  }\n};\n\nexports.requireDocumentId = function (op, doc) {\n  if (!doc._id) {\n    throw new Error(op + '() requires that the document contains an ID (\"_id\" property)');\n  }\n\n  exports.validateDocumentId(op, doc._id);\n};\n\nexports.validateDocumentId = function (op, id) {\n  if (typeof id !== 'string' || !/^[a-z0-9_.-]+$/i.test(id)) {\n    throw new Error(op + '(): \"' + id + '\" is not a valid document ID');\n  }\n};\n\nexports.validateInsert = function (at, selector, items) {\n  var signature = 'insert(at, selector, items)';\n  if (VALID_INSERT_LOCATIONS.indexOf(at) === -1) {\n    var valid = VALID_INSERT_LOCATIONS.map(function (loc) {\n      return '\"' + loc + '\"';\n    }).join(', ');\n    throw new Error(signature + ' takes an \"at\"-argument which is one of: ' + valid);\n  }\n\n  if (typeof selector !== 'string') {\n    throw new Error(signature + ' takes a \"selector\"-argument which must be a string');\n  }\n\n  if (!Array.isArray(items)) {\n    throw new Error(signature + ' takes an \"items\"-argument which must be an array');\n  }\n};\n\nexports.hasDataset = function (config) {\n  if (!config.gradientMode && !config.dataset) {\n    throw new Error('`dataset` must be provided to perform queries');\n  }\n\n  return config.dataset || '';\n};\n\n//# sourceURL=webpack:///./node_modules/@sanity/client/lib/validators.js?");

/***/ }),

/***/ "./node_modules/@sanity/eventsource/browser.js":
/*!*****************************************************!*\
  !*** ./node_modules/@sanity/eventsource/browser.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* eslint-disable no-var */\nvar evs = __webpack_require__(/*! eventsource-polyfill/dist/eventsource */ \"./node_modules/eventsource-polyfill/dist/eventsource.js\")\nmodule.exports = window.EventSource || evs.EventSource\n\n\n//# sourceURL=webpack:///./node_modules/@sanity/eventsource/browser.js?");

/***/ }),

/***/ "./node_modules/@sanity/generate-help-url/index.js":
/*!*********************************************************!*\
  !*** ./node_modules/@sanity/generate-help-url/index.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("var baseUrl = 'https://docs.sanity.io/help/'\n\nmodule.exports = function generateHelpUrl(slug) {\n  return baseUrl + slug\n}\n\n\n//# sourceURL=webpack:///./node_modules/@sanity/generate-help-url/index.js?");

/***/ }),

/***/ "./node_modules/@sanity/observable/lib/SanityObservableMinimal.js":
/*!************************************************************************!*\
  !*** ./node_modules/@sanity/observable/lib/SanityObservableMinimal.js ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _require = __webpack_require__(/*! rxjs/Observable */ \"./node_modules/@sanity/observable/node_modules/rxjs/Observable.js\"),\n    Observable = _require.Observable;\n\nvar _require2 = __webpack_require__(/*! rxjs/operator/map */ \"./node_modules/@sanity/observable/node_modules/rxjs/operator/map.js\"),\n    map = _require2.map;\n\nvar _require3 = __webpack_require__(/*! rxjs/operator/filter */ \"./node_modules/@sanity/observable/node_modules/rxjs/operator/filter.js\"),\n    filter = _require3.filter;\n\nvar _require4 = __webpack_require__(/*! rxjs/operator/reduce */ \"./node_modules/@sanity/observable/node_modules/rxjs/operator/reduce.js\"),\n    reduce = _require4.reduce;\n\nvar _require5 = __webpack_require__(/*! rxjs/operator/toPromise */ \"./node_modules/@sanity/observable/node_modules/rxjs/operator/toPromise.js\"),\n    toPromise = _require5.toPromise;\n\nvar assign = __webpack_require__(/*! object-assign */ \"./node_modules/object-assign/index.js\");\n\n/*\n A minimal rxjs based observable that align as closely as possible with the current es-observable spec,\n without the static factory methods\n */\nfunction SanityObservableMinimal() {\n  Observable.apply(this, arguments); // eslint-disable-line prefer-rest-params\n}\n\nSanityObservableMinimal.prototype = Object.create(assign(Object.create(null), Observable.prototype));\nObject.defineProperty(SanityObservableMinimal.prototype, 'constructor', {\n  value: SanityObservableMinimal,\n  enumerable: false,\n  writable: true,\n  configurable: true\n});\n\nSanityObservableMinimal.prototype.lift = function lift(operator) {\n  var observable = new SanityObservableMinimal();\n  observable.source = this;\n  observable.operator = operator;\n  return observable;\n};\n\nSanityObservableMinimal.prototype.map = map;\nSanityObservableMinimal.prototype.filter = filter;\nSanityObservableMinimal.prototype.reduce = reduce;\nSanityObservableMinimal.prototype.toPromise = toPromise;\n\nmodule.exports = SanityObservableMinimal;\n\n//# sourceURL=webpack:///./node_modules/@sanity/observable/lib/SanityObservableMinimal.js?");

/***/ }),

/***/ "./node_modules/@sanity/observable/minimal.js":
/*!****************************************************!*\
  !*** ./node_modules/@sanity/observable/minimal.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = __webpack_require__(/*! ./lib/SanityObservableMinimal */ \"./node_modules/@sanity/observable/lib/SanityObservableMinimal.js\")\n\n\n//# sourceURL=webpack:///./node_modules/@sanity/observable/minimal.js?");

/***/ }),

/***/ "./node_modules/@sanity/observable/node_modules/rxjs/Observable.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@sanity/observable/node_modules/rxjs/Observable.js ***!
  \*************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar root_1 = __webpack_require__(/*! ./util/root */ \"./node_modules/@sanity/observable/node_modules/rxjs/util/root.js\");\nvar toSubscriber_1 = __webpack_require__(/*! ./util/toSubscriber */ \"./node_modules/@sanity/observable/node_modules/rxjs/util/toSubscriber.js\");\nvar observable_1 = __webpack_require__(/*! ./symbol/observable */ \"./node_modules/@sanity/observable/node_modules/rxjs/symbol/observable.js\");\nvar pipe_1 = __webpack_require__(/*! ./util/pipe */ \"./node_modules/@sanity/observable/node_modules/rxjs/util/pipe.js\");\n/**\n * A representation of any set of values over any amount of time. This is the most basic building block\n * of RxJS.\n *\n * @class Observable<T>\n */\nvar Observable = (function () {\n    /**\n     * @constructor\n     * @param {Function} subscribe the function that is called when the Observable is\n     * initially subscribed to. This function is given a Subscriber, to which new values\n     * can be `next`ed, or an `error` method can be called to raise an error, or\n     * `complete` can be called to notify of a successful completion.\n     */\n    function Observable(subscribe) {\n        this._isScalar = false;\n        if (subscribe) {\n            this._subscribe = subscribe;\n        }\n    }\n    /**\n     * Creates a new Observable, with this Observable as the source, and the passed\n     * operator defined as the new observable's operator.\n     * @method lift\n     * @param {Operator} operator the operator defining the operation to take on the observable\n     * @return {Observable} a new observable with the Operator applied\n     */\n    Observable.prototype.lift = function (operator) {\n        var observable = new Observable();\n        observable.source = this;\n        observable.operator = operator;\n        return observable;\n    };\n    /**\n     * Invokes an execution of an Observable and registers Observer handlers for notifications it will emit.\n     *\n     * <span class=\"informal\">Use it when you have all these Observables, but still nothing is happening.</span>\n     *\n     * `subscribe` is not a regular operator, but a method that calls Observable's internal `subscribe` function. It\n     * might be for example a function that you passed to a {@link create} static factory, but most of the time it is\n     * a library implementation, which defines what and when will be emitted by an Observable. This means that calling\n     * `subscribe` is actually the moment when Observable starts its work, not when it is created, as it is often\n     * thought.\n     *\n     * Apart from starting the execution of an Observable, this method allows you to listen for values\n     * that an Observable emits, as well as for when it completes or errors. You can achieve this in two\n     * following ways.\n     *\n     * The first way is creating an object that implements {@link Observer} interface. It should have methods\n     * defined by that interface, but note that it should be just a regular JavaScript object, which you can create\n     * yourself in any way you want (ES6 class, classic function constructor, object literal etc.). In particular do\n     * not attempt to use any RxJS implementation details to create Observers - you don't need them. Remember also\n     * that your object does not have to implement all methods. If you find yourself creating a method that doesn't\n     * do anything, you can simply omit it. Note however, that if `error` method is not provided, all errors will\n     * be left uncaught.\n     *\n     * The second way is to give up on Observer object altogether and simply provide callback functions in place of its methods.\n     * This means you can provide three functions as arguments to `subscribe`, where first function is equivalent\n     * of a `next` method, second of an `error` method and third of a `complete` method. Just as in case of Observer,\n     * if you do not need to listen for something, you can omit a function, preferably by passing `undefined` or `null`,\n     * since `subscribe` recognizes these functions by where they were placed in function call. When it comes\n     * to `error` function, just as before, if not provided, errors emitted by an Observable will be thrown.\n     *\n     * Whatever style of calling `subscribe` you use, in both cases it returns a Subscription object.\n     * This object allows you to call `unsubscribe` on it, which in turn will stop work that an Observable does and will clean\n     * up all resources that an Observable used. Note that cancelling a subscription will not call `complete` callback\n     * provided to `subscribe` function, which is reserved for a regular completion signal that comes from an Observable.\n     *\n     * Remember that callbacks provided to `subscribe` are not guaranteed to be called asynchronously.\n     * It is an Observable itself that decides when these functions will be called. For example {@link of}\n     * by default emits all its values synchronously. Always check documentation for how given Observable\n     * will behave when subscribed and if its default behavior can be modified with a {@link Scheduler}.\n     *\n     * @example <caption>Subscribe with an Observer</caption>\n     * const sumObserver = {\n     *   sum: 0,\n     *   next(value) {\n     *     console.log('Adding: ' + value);\n     *     this.sum = this.sum + value;\n     *   },\n     *   error() { // We actually could just remove this method,\n     *   },        // since we do not really care about errors right now.\n     *   complete() {\n     *     console.log('Sum equals: ' + this.sum);\n     *   }\n     * };\n     *\n     * Rx.Observable.of(1, 2, 3) // Synchronously emits 1, 2, 3 and then completes.\n     * .subscribe(sumObserver);\n     *\n     * // Logs:\n     * // \"Adding: 1\"\n     * // \"Adding: 2\"\n     * // \"Adding: 3\"\n     * // \"Sum equals: 6\"\n     *\n     *\n     * @example <caption>Subscribe with functions</caption>\n     * let sum = 0;\n     *\n     * Rx.Observable.of(1, 2, 3)\n     * .subscribe(\n     *   function(value) {\n     *     console.log('Adding: ' + value);\n     *     sum = sum + value;\n     *   },\n     *   undefined,\n     *   function() {\n     *     console.log('Sum equals: ' + sum);\n     *   }\n     * );\n     *\n     * // Logs:\n     * // \"Adding: 1\"\n     * // \"Adding: 2\"\n     * // \"Adding: 3\"\n     * // \"Sum equals: 6\"\n     *\n     *\n     * @example <caption>Cancel a subscription</caption>\n     * const subscription = Rx.Observable.interval(1000).subscribe(\n     *   num => console.log(num),\n     *   undefined,\n     *   () => console.log('completed!') // Will not be called, even\n     * );                                // when cancelling subscription\n     *\n     *\n     * setTimeout(() => {\n     *   subscription.unsubscribe();\n     *   console.log('unsubscribed!');\n     * }, 2500);\n     *\n     * // Logs:\n     * // 0 after 1s\n     * // 1 after 2s\n     * // \"unsubscribed!\" after 2.5s\n     *\n     *\n     * @param {Observer|Function} observerOrNext (optional) Either an observer with methods to be called,\n     *  or the first of three possible handlers, which is the handler for each value emitted from the subscribed\n     *  Observable.\n     * @param {Function} error (optional) A handler for a terminal event resulting from an error. If no error handler is provided,\n     *  the error will be thrown as unhandled.\n     * @param {Function} complete (optional) A handler for a terminal event resulting from successful completion.\n     * @return {ISubscription} a subscription reference to the registered handlers\n     * @method subscribe\n     */\n    Observable.prototype.subscribe = function (observerOrNext, error, complete) {\n        var operator = this.operator;\n        var sink = toSubscriber_1.toSubscriber(observerOrNext, error, complete);\n        if (operator) {\n            operator.call(sink, this.source);\n        }\n        else {\n            sink.add(this.source || !sink.syncErrorThrowable ? this._subscribe(sink) : this._trySubscribe(sink));\n        }\n        if (sink.syncErrorThrowable) {\n            sink.syncErrorThrowable = false;\n            if (sink.syncErrorThrown) {\n                throw sink.syncErrorValue;\n            }\n        }\n        return sink;\n    };\n    Observable.prototype._trySubscribe = function (sink) {\n        try {\n            return this._subscribe(sink);\n        }\n        catch (err) {\n            sink.syncErrorThrown = true;\n            sink.syncErrorValue = err;\n            sink.error(err);\n        }\n    };\n    /**\n     * @method forEach\n     * @param {Function} next a handler for each value emitted by the observable\n     * @param {PromiseConstructor} [PromiseCtor] a constructor function used to instantiate the Promise\n     * @return {Promise} a promise that either resolves on observable completion or\n     *  rejects with the handled error\n     */\n    Observable.prototype.forEach = function (next, PromiseCtor) {\n        var _this = this;\n        if (!PromiseCtor) {\n            if (root_1.root.Rx && root_1.root.Rx.config && root_1.root.Rx.config.Promise) {\n                PromiseCtor = root_1.root.Rx.config.Promise;\n            }\n            else if (root_1.root.Promise) {\n                PromiseCtor = root_1.root.Promise;\n            }\n        }\n        if (!PromiseCtor) {\n            throw new Error('no Promise impl found');\n        }\n        return new PromiseCtor(function (resolve, reject) {\n            // Must be declared in a separate statement to avoid a RefernceError when\n            // accessing subscription below in the closure due to Temporal Dead Zone.\n            var subscription;\n            subscription = _this.subscribe(function (value) {\n                if (subscription) {\n                    // if there is a subscription, then we can surmise\n                    // the next handling is asynchronous. Any errors thrown\n                    // need to be rejected explicitly and unsubscribe must be\n                    // called manually\n                    try {\n                        next(value);\n                    }\n                    catch (err) {\n                        reject(err);\n                        subscription.unsubscribe();\n                    }\n                }\n                else {\n                    // if there is NO subscription, then we're getting a nexted\n                    // value synchronously during subscription. We can just call it.\n                    // If it errors, Observable's `subscribe` will ensure the\n                    // unsubscription logic is called, then synchronously rethrow the error.\n                    // After that, Promise will trap the error and send it\n                    // down the rejection path.\n                    next(value);\n                }\n            }, reject, resolve);\n        });\n    };\n    /** @deprecated internal use only */ Observable.prototype._subscribe = function (subscriber) {\n        return this.source.subscribe(subscriber);\n    };\n    /**\n     * An interop point defined by the es7-observable spec https://github.com/zenparsing/es-observable\n     * @method Symbol.observable\n     * @return {Observable} this instance of the observable\n     */\n    Observable.prototype[observable_1.observable] = function () {\n        return this;\n    };\n    /* tslint:enable:max-line-length */\n    /**\n     * Used to stitch together functional operators into a chain.\n     * @method pipe\n     * @return {Observable} the Observable result of all of the operators having\n     * been called in the order they were passed in.\n     *\n     * @example\n     *\n     * import { map, filter, scan } from 'rxjs/operators';\n     *\n     * Rx.Observable.interval(1000)\n     *   .pipe(\n     *     filter(x => x % 2 === 0),\n     *     map(x => x + x),\n     *     scan((acc, x) => acc + x)\n     *   )\n     *   .subscribe(x => console.log(x))\n     */\n    Observable.prototype.pipe = function () {\n        var operations = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            operations[_i - 0] = arguments[_i];\n        }\n        if (operations.length === 0) {\n            return this;\n        }\n        return pipe_1.pipeFromArray(operations)(this);\n    };\n    /* tslint:enable:max-line-length */\n    Observable.prototype.toPromise = function (PromiseCtor) {\n        var _this = this;\n        if (!PromiseCtor) {\n            if (root_1.root.Rx && root_1.root.Rx.config && root_1.root.Rx.config.Promise) {\n                PromiseCtor = root_1.root.Rx.config.Promise;\n            }\n            else if (root_1.root.Promise) {\n                PromiseCtor = root_1.root.Promise;\n            }\n        }\n        if (!PromiseCtor) {\n            throw new Error('no Promise impl found');\n        }\n        return new PromiseCtor(function (resolve, reject) {\n            var value;\n            _this.subscribe(function (x) { return value = x; }, function (err) { return reject(err); }, function () { return resolve(value); });\n        });\n    };\n    // HACK: Since TypeScript inherits static properties too, we have to\n    // fight against TypeScript here so Subject can have a different static create signature\n    /**\n     * Creates a new cold Observable by calling the Observable constructor\n     * @static true\n     * @owner Observable\n     * @method create\n     * @param {Function} subscribe? the subscriber function to be passed to the Observable constructor\n     * @return {Observable} a new cold observable\n     */\n    Observable.create = function (subscribe) {\n        return new Observable(subscribe);\n    };\n    return Observable;\n}());\nexports.Observable = Observable;\n//# sourceMappingURL=Observable.js.map\n\n//# sourceURL=webpack:///./node_modules/@sanity/observable/node_modules/rxjs/Observable.js?");

/***/ }),

/***/ "./node_modules/@sanity/observable/node_modules/rxjs/Observer.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@sanity/observable/node_modules/rxjs/Observer.js ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nexports.empty = {\n    closed: true,\n    next: function (value) { },\n    error: function (err) { throw err; },\n    complete: function () { }\n};\n//# sourceMappingURL=Observer.js.map\n\n//# sourceURL=webpack:///./node_modules/@sanity/observable/node_modules/rxjs/Observer.js?");

/***/ }),

/***/ "./node_modules/@sanity/observable/node_modules/rxjs/Subscriber.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@sanity/observable/node_modules/rxjs/Subscriber.js ***!
  \*************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar isFunction_1 = __webpack_require__(/*! ./util/isFunction */ \"./node_modules/@sanity/observable/node_modules/rxjs/util/isFunction.js\");\nvar Subscription_1 = __webpack_require__(/*! ./Subscription */ \"./node_modules/@sanity/observable/node_modules/rxjs/Subscription.js\");\nvar Observer_1 = __webpack_require__(/*! ./Observer */ \"./node_modules/@sanity/observable/node_modules/rxjs/Observer.js\");\nvar rxSubscriber_1 = __webpack_require__(/*! ./symbol/rxSubscriber */ \"./node_modules/@sanity/observable/node_modules/rxjs/symbol/rxSubscriber.js\");\n/**\n * Implements the {@link Observer} interface and extends the\n * {@link Subscription} class. While the {@link Observer} is the public API for\n * consuming the values of an {@link Observable}, all Observers get converted to\n * a Subscriber, in order to provide Subscription-like capabilities such as\n * `unsubscribe`. Subscriber is a common type in RxJS, and crucial for\n * implementing operators, but it is rarely used as a public API.\n *\n * @class Subscriber<T>\n */\nvar Subscriber = (function (_super) {\n    __extends(Subscriber, _super);\n    /**\n     * @param {Observer|function(value: T): void} [destinationOrNext] A partially\n     * defined Observer or a `next` callback function.\n     * @param {function(e: ?any): void} [error] The `error` callback of an\n     * Observer.\n     * @param {function(): void} [complete] The `complete` callback of an\n     * Observer.\n     */\n    function Subscriber(destinationOrNext, error, complete) {\n        _super.call(this);\n        this.syncErrorValue = null;\n        this.syncErrorThrown = false;\n        this.syncErrorThrowable = false;\n        this.isStopped = false;\n        switch (arguments.length) {\n            case 0:\n                this.destination = Observer_1.empty;\n                break;\n            case 1:\n                if (!destinationOrNext) {\n                    this.destination = Observer_1.empty;\n                    break;\n                }\n                if (typeof destinationOrNext === 'object') {\n                    // HACK(benlesh): To resolve an issue where Node users may have multiple\n                    // copies of rxjs in their node_modules directory.\n                    if (isTrustedSubscriber(destinationOrNext)) {\n                        var trustedSubscriber = destinationOrNext[rxSubscriber_1.rxSubscriber]();\n                        this.syncErrorThrowable = trustedSubscriber.syncErrorThrowable;\n                        this.destination = trustedSubscriber;\n                        trustedSubscriber.add(this);\n                    }\n                    else {\n                        this.syncErrorThrowable = true;\n                        this.destination = new SafeSubscriber(this, destinationOrNext);\n                    }\n                    break;\n                }\n            default:\n                this.syncErrorThrowable = true;\n                this.destination = new SafeSubscriber(this, destinationOrNext, error, complete);\n                break;\n        }\n    }\n    Subscriber.prototype[rxSubscriber_1.rxSubscriber] = function () { return this; };\n    /**\n     * A static factory for a Subscriber, given a (potentially partial) definition\n     * of an Observer.\n     * @param {function(x: ?T): void} [next] The `next` callback of an Observer.\n     * @param {function(e: ?any): void} [error] The `error` callback of an\n     * Observer.\n     * @param {function(): void} [complete] The `complete` callback of an\n     * Observer.\n     * @return {Subscriber<T>} A Subscriber wrapping the (partially defined)\n     * Observer represented by the given arguments.\n     */\n    Subscriber.create = function (next, error, complete) {\n        var subscriber = new Subscriber(next, error, complete);\n        subscriber.syncErrorThrowable = false;\n        return subscriber;\n    };\n    /**\n     * The {@link Observer} callback to receive notifications of type `next` from\n     * the Observable, with a value. The Observable may call this method 0 or more\n     * times.\n     * @param {T} [value] The `next` value.\n     * @return {void}\n     */\n    Subscriber.prototype.next = function (value) {\n        if (!this.isStopped) {\n            this._next(value);\n        }\n    };\n    /**\n     * The {@link Observer} callback to receive notifications of type `error` from\n     * the Observable, with an attached {@link Error}. Notifies the Observer that\n     * the Observable has experienced an error condition.\n     * @param {any} [err] The `error` exception.\n     * @return {void}\n     */\n    Subscriber.prototype.error = function (err) {\n        if (!this.isStopped) {\n            this.isStopped = true;\n            this._error(err);\n        }\n    };\n    /**\n     * The {@link Observer} callback to receive a valueless notification of type\n     * `complete` from the Observable. Notifies the Observer that the Observable\n     * has finished sending push-based notifications.\n     * @return {void}\n     */\n    Subscriber.prototype.complete = function () {\n        if (!this.isStopped) {\n            this.isStopped = true;\n            this._complete();\n        }\n    };\n    Subscriber.prototype.unsubscribe = function () {\n        if (this.closed) {\n            return;\n        }\n        this.isStopped = true;\n        _super.prototype.unsubscribe.call(this);\n    };\n    Subscriber.prototype._next = function (value) {\n        this.destination.next(value);\n    };\n    Subscriber.prototype._error = function (err) {\n        this.destination.error(err);\n        this.unsubscribe();\n    };\n    Subscriber.prototype._complete = function () {\n        this.destination.complete();\n        this.unsubscribe();\n    };\n    /** @deprecated internal use only */ Subscriber.prototype._unsubscribeAndRecycle = function () {\n        var _a = this, _parent = _a._parent, _parents = _a._parents;\n        this._parent = null;\n        this._parents = null;\n        this.unsubscribe();\n        this.closed = false;\n        this.isStopped = false;\n        this._parent = _parent;\n        this._parents = _parents;\n        return this;\n    };\n    return Subscriber;\n}(Subscription_1.Subscription));\nexports.Subscriber = Subscriber;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SafeSubscriber = (function (_super) {\n    __extends(SafeSubscriber, _super);\n    function SafeSubscriber(_parentSubscriber, observerOrNext, error, complete) {\n        _super.call(this);\n        this._parentSubscriber = _parentSubscriber;\n        var next;\n        var context = this;\n        if (isFunction_1.isFunction(observerOrNext)) {\n            next = observerOrNext;\n        }\n        else if (observerOrNext) {\n            next = observerOrNext.next;\n            error = observerOrNext.error;\n            complete = observerOrNext.complete;\n            if (observerOrNext !== Observer_1.empty) {\n                context = Object.create(observerOrNext);\n                if (isFunction_1.isFunction(context.unsubscribe)) {\n                    this.add(context.unsubscribe.bind(context));\n                }\n                context.unsubscribe = this.unsubscribe.bind(this);\n            }\n        }\n        this._context = context;\n        this._next = next;\n        this._error = error;\n        this._complete = complete;\n    }\n    SafeSubscriber.prototype.next = function (value) {\n        if (!this.isStopped && this._next) {\n            var _parentSubscriber = this._parentSubscriber;\n            if (!_parentSubscriber.syncErrorThrowable) {\n                this.__tryOrUnsub(this._next, value);\n            }\n            else if (this.__tryOrSetError(_parentSubscriber, this._next, value)) {\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.error = function (err) {\n        if (!this.isStopped) {\n            var _parentSubscriber = this._parentSubscriber;\n            if (this._error) {\n                if (!_parentSubscriber.syncErrorThrowable) {\n                    this.__tryOrUnsub(this._error, err);\n                    this.unsubscribe();\n                }\n                else {\n                    this.__tryOrSetError(_parentSubscriber, this._error, err);\n                    this.unsubscribe();\n                }\n            }\n            else if (!_parentSubscriber.syncErrorThrowable) {\n                this.unsubscribe();\n                throw err;\n            }\n            else {\n                _parentSubscriber.syncErrorValue = err;\n                _parentSubscriber.syncErrorThrown = true;\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.complete = function () {\n        var _this = this;\n        if (!this.isStopped) {\n            var _parentSubscriber = this._parentSubscriber;\n            if (this._complete) {\n                var wrappedComplete = function () { return _this._complete.call(_this._context); };\n                if (!_parentSubscriber.syncErrorThrowable) {\n                    this.__tryOrUnsub(wrappedComplete);\n                    this.unsubscribe();\n                }\n                else {\n                    this.__tryOrSetError(_parentSubscriber, wrappedComplete);\n                    this.unsubscribe();\n                }\n            }\n            else {\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.__tryOrUnsub = function (fn, value) {\n        try {\n            fn.call(this._context, value);\n        }\n        catch (err) {\n            this.unsubscribe();\n            throw err;\n        }\n    };\n    SafeSubscriber.prototype.__tryOrSetError = function (parent, fn, value) {\n        try {\n            fn.call(this._context, value);\n        }\n        catch (err) {\n            parent.syncErrorValue = err;\n            parent.syncErrorThrown = true;\n            return true;\n        }\n        return false;\n    };\n    /** @deprecated internal use only */ SafeSubscriber.prototype._unsubscribe = function () {\n        var _parentSubscriber = this._parentSubscriber;\n        this._context = null;\n        this._parentSubscriber = null;\n        _parentSubscriber.unsubscribe();\n    };\n    return SafeSubscriber;\n}(Subscriber));\nfunction isTrustedSubscriber(obj) {\n    return obj instanceof Subscriber || ('syncErrorThrowable' in obj && obj[rxSubscriber_1.rxSubscriber]);\n}\n//# sourceMappingURL=Subscriber.js.map\n\n//# sourceURL=webpack:///./node_modules/@sanity/observable/node_modules/rxjs/Subscriber.js?");

/***/ }),

/***/ "./node_modules/@sanity/observable/node_modules/rxjs/Subscription.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@sanity/observable/node_modules/rxjs/Subscription.js ***!
  \***************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar isArray_1 = __webpack_require__(/*! ./util/isArray */ \"./node_modules/@sanity/observable/node_modules/rxjs/util/isArray.js\");\nvar isObject_1 = __webpack_require__(/*! ./util/isObject */ \"./node_modules/@sanity/observable/node_modules/rxjs/util/isObject.js\");\nvar isFunction_1 = __webpack_require__(/*! ./util/isFunction */ \"./node_modules/@sanity/observable/node_modules/rxjs/util/isFunction.js\");\nvar tryCatch_1 = __webpack_require__(/*! ./util/tryCatch */ \"./node_modules/@sanity/observable/node_modules/rxjs/util/tryCatch.js\");\nvar errorObject_1 = __webpack_require__(/*! ./util/errorObject */ \"./node_modules/@sanity/observable/node_modules/rxjs/util/errorObject.js\");\nvar UnsubscriptionError_1 = __webpack_require__(/*! ./util/UnsubscriptionError */ \"./node_modules/@sanity/observable/node_modules/rxjs/util/UnsubscriptionError.js\");\n/**\n * Represents a disposable resource, such as the execution of an Observable. A\n * Subscription has one important method, `unsubscribe`, that takes no argument\n * and just disposes the resource held by the subscription.\n *\n * Additionally, subscriptions may be grouped together through the `add()`\n * method, which will attach a child Subscription to the current Subscription.\n * When a Subscription is unsubscribed, all its children (and its grandchildren)\n * will be unsubscribed as well.\n *\n * @class Subscription\n */\nvar Subscription = (function () {\n    /**\n     * @param {function(): void} [unsubscribe] A function describing how to\n     * perform the disposal of resources when the `unsubscribe` method is called.\n     */\n    function Subscription(unsubscribe) {\n        /**\n         * A flag to indicate whether this Subscription has already been unsubscribed.\n         * @type {boolean}\n         */\n        this.closed = false;\n        this._parent = null;\n        this._parents = null;\n        this._subscriptions = null;\n        if (unsubscribe) {\n            this._unsubscribe = unsubscribe;\n        }\n    }\n    /**\n     * Disposes the resources held by the subscription. May, for instance, cancel\n     * an ongoing Observable execution or cancel any other type of work that\n     * started when the Subscription was created.\n     * @return {void}\n     */\n    Subscription.prototype.unsubscribe = function () {\n        var hasErrors = false;\n        var errors;\n        if (this.closed) {\n            return;\n        }\n        var _a = this, _parent = _a._parent, _parents = _a._parents, _unsubscribe = _a._unsubscribe, _subscriptions = _a._subscriptions;\n        this.closed = true;\n        this._parent = null;\n        this._parents = null;\n        // null out _subscriptions first so any child subscriptions that attempt\n        // to remove themselves from this subscription will noop\n        this._subscriptions = null;\n        var index = -1;\n        var len = _parents ? _parents.length : 0;\n        // if this._parent is null, then so is this._parents, and we\n        // don't have to remove ourselves from any parent subscriptions.\n        while (_parent) {\n            _parent.remove(this);\n            // if this._parents is null or index >= len,\n            // then _parent is set to null, and the loop exits\n            _parent = ++index < len && _parents[index] || null;\n        }\n        if (isFunction_1.isFunction(_unsubscribe)) {\n            var trial = tryCatch_1.tryCatch(_unsubscribe).call(this);\n            if (trial === errorObject_1.errorObject) {\n                hasErrors = true;\n                errors = errors || (errorObject_1.errorObject.e instanceof UnsubscriptionError_1.UnsubscriptionError ?\n                    flattenUnsubscriptionErrors(errorObject_1.errorObject.e.errors) : [errorObject_1.errorObject.e]);\n            }\n        }\n        if (isArray_1.isArray(_subscriptions)) {\n            index = -1;\n            len = _subscriptions.length;\n            while (++index < len) {\n                var sub = _subscriptions[index];\n                if (isObject_1.isObject(sub)) {\n                    var trial = tryCatch_1.tryCatch(sub.unsubscribe).call(sub);\n                    if (trial === errorObject_1.errorObject) {\n                        hasErrors = true;\n                        errors = errors || [];\n                        var err = errorObject_1.errorObject.e;\n                        if (err instanceof UnsubscriptionError_1.UnsubscriptionError) {\n                            errors = errors.concat(flattenUnsubscriptionErrors(err.errors));\n                        }\n                        else {\n                            errors.push(err);\n                        }\n                    }\n                }\n            }\n        }\n        if (hasErrors) {\n            throw new UnsubscriptionError_1.UnsubscriptionError(errors);\n        }\n    };\n    /**\n     * Adds a tear down to be called during the unsubscribe() of this\n     * Subscription.\n     *\n     * If the tear down being added is a subscription that is already\n     * unsubscribed, is the same reference `add` is being called on, or is\n     * `Subscription.EMPTY`, it will not be added.\n     *\n     * If this subscription is already in an `closed` state, the passed\n     * tear down logic will be executed immediately.\n     *\n     * @param {TeardownLogic} teardown The additional logic to execute on\n     * teardown.\n     * @return {Subscription} Returns the Subscription used or created to be\n     * added to the inner subscriptions list. This Subscription can be used with\n     * `remove()` to remove the passed teardown logic from the inner subscriptions\n     * list.\n     */\n    Subscription.prototype.add = function (teardown) {\n        if (!teardown || (teardown === Subscription.EMPTY)) {\n            return Subscription.EMPTY;\n        }\n        if (teardown === this) {\n            return this;\n        }\n        var subscription = teardown;\n        switch (typeof teardown) {\n            case 'function':\n                subscription = new Subscription(teardown);\n            case 'object':\n                if (subscription.closed || typeof subscription.unsubscribe !== 'function') {\n                    return subscription;\n                }\n                else if (this.closed) {\n                    subscription.unsubscribe();\n                    return subscription;\n                }\n                else if (typeof subscription._addParent !== 'function' /* quack quack */) {\n                    var tmp = subscription;\n                    subscription = new Subscription();\n                    subscription._subscriptions = [tmp];\n                }\n                break;\n            default:\n                throw new Error('unrecognized teardown ' + teardown + ' added to Subscription.');\n        }\n        var subscriptions = this._subscriptions || (this._subscriptions = []);\n        subscriptions.push(subscription);\n        subscription._addParent(this);\n        return subscription;\n    };\n    /**\n     * Removes a Subscription from the internal list of subscriptions that will\n     * unsubscribe during the unsubscribe process of this Subscription.\n     * @param {Subscription} subscription The subscription to remove.\n     * @return {void}\n     */\n    Subscription.prototype.remove = function (subscription) {\n        var subscriptions = this._subscriptions;\n        if (subscriptions) {\n            var subscriptionIndex = subscriptions.indexOf(subscription);\n            if (subscriptionIndex !== -1) {\n                subscriptions.splice(subscriptionIndex, 1);\n            }\n        }\n    };\n    Subscription.prototype._addParent = function (parent) {\n        var _a = this, _parent = _a._parent, _parents = _a._parents;\n        if (!_parent || _parent === parent) {\n            // If we don't have a parent, or the new parent is the same as the\n            // current parent, then set this._parent to the new parent.\n            this._parent = parent;\n        }\n        else if (!_parents) {\n            // If there's already one parent, but not multiple, allocate an Array to\n            // store the rest of the parent Subscriptions.\n            this._parents = [parent];\n        }\n        else if (_parents.indexOf(parent) === -1) {\n            // Only add the new parent to the _parents list if it's not already there.\n            _parents.push(parent);\n        }\n    };\n    Subscription.EMPTY = (function (empty) {\n        empty.closed = true;\n        return empty;\n    }(new Subscription()));\n    return Subscription;\n}());\nexports.Subscription = Subscription;\nfunction flattenUnsubscriptionErrors(errors) {\n    return errors.reduce(function (errs, err) { return errs.concat((err instanceof UnsubscriptionError_1.UnsubscriptionError) ? err.errors : err); }, []);\n}\n//# sourceMappingURL=Subscription.js.map\n\n//# sourceURL=webpack:///./node_modules/@sanity/observable/node_modules/rxjs/Subscription.js?");

/***/ }),

/***/ "./node_modules/@sanity/observable/node_modules/rxjs/observable/EmptyObservable.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@sanity/observable/node_modules/rxjs/observable/EmptyObservable.js ***!
  \*****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Observable_1 = __webpack_require__(/*! ../Observable */ \"./node_modules/@sanity/observable/node_modules/rxjs/Observable.js\");\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar EmptyObservable = (function (_super) {\n    __extends(EmptyObservable, _super);\n    function EmptyObservable(scheduler) {\n        _super.call(this);\n        this.scheduler = scheduler;\n    }\n    /**\n     * Creates an Observable that emits no items to the Observer and immediately\n     * emits a complete notification.\n     *\n     * <span class=\"informal\">Just emits 'complete', and nothing else.\n     * </span>\n     *\n     * <img src=\"./img/empty.png\" width=\"100%\">\n     *\n     * This static operator is useful for creating a simple Observable that only\n     * emits the complete notification. It can be used for composing with other\n     * Observables, such as in a {@link mergeMap}.\n     *\n     * @example <caption>Emit the number 7, then complete.</caption>\n     * var result = Rx.Observable.empty().startWith(7);\n     * result.subscribe(x => console.log(x));\n     *\n     * @example <caption>Map and flatten only odd numbers to the sequence 'a', 'b', 'c'</caption>\n     * var interval = Rx.Observable.interval(1000);\n     * var result = interval.mergeMap(x =>\n     *   x % 2 === 1 ? Rx.Observable.of('a', 'b', 'c') : Rx.Observable.empty()\n     * );\n     * result.subscribe(x => console.log(x));\n     *\n     * // Results in the following to the console:\n     * // x is equal to the count on the interval eg(0,1,2,3,...)\n     * // x will occur every 1000ms\n     * // if x % 2 is equal to 1 print abc\n     * // if x % 2 is not equal to 1 nothing will be output\n     *\n     * @see {@link create}\n     * @see {@link never}\n     * @see {@link of}\n     * @see {@link throw}\n     *\n     * @param {Scheduler} [scheduler] A {@link IScheduler} to use for scheduling\n     * the emission of the complete notification.\n     * @return {Observable} An \"empty\" Observable: emits only the complete\n     * notification.\n     * @static true\n     * @name empty\n     * @owner Observable\n     */\n    EmptyObservable.create = function (scheduler) {\n        return new EmptyObservable(scheduler);\n    };\n    EmptyObservable.dispatch = function (arg) {\n        var subscriber = arg.subscriber;\n        subscriber.complete();\n    };\n    /** @deprecated internal use only */ EmptyObservable.prototype._subscribe = function (subscriber) {\n        var scheduler = this.scheduler;\n        if (scheduler) {\n            return scheduler.schedule(EmptyObservable.dispatch, 0, { subscriber: subscriber });\n        }\n        else {\n            subscriber.complete();\n        }\n    };\n    return EmptyObservable;\n}(Observable_1.Observable));\nexports.EmptyObservable = EmptyObservable;\n//# sourceMappingURL=EmptyObservable.js.map\n\n//# sourceURL=webpack:///./node_modules/@sanity/observable/node_modules/rxjs/observable/EmptyObservable.js?");

/***/ }),

/***/ "./node_modules/@sanity/observable/node_modules/rxjs/operator/filter.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@sanity/observable/node_modules/rxjs/operator/filter.js ***!
  \******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar filter_1 = __webpack_require__(/*! ../operators/filter */ \"./node_modules/@sanity/observable/node_modules/rxjs/operators/filter.js\");\n/* tslint:enable:max-line-length */\n/**\n * Filter items emitted by the source Observable by only emitting those that\n * satisfy a specified predicate.\n *\n * <span class=\"informal\">Like\n * [Array.prototype.filter()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter),\n * it only emits a value from the source if it passes a criterion function.</span>\n *\n * <img src=\"./img/filter.png\" width=\"100%\">\n *\n * Similar to the well-known `Array.prototype.filter` method, this operator\n * takes values from the source Observable, passes them through a `predicate`\n * function and only emits those values that yielded `true`.\n *\n * @example <caption>Emit only click events whose target was a DIV element</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var clicksOnDivs = clicks.filter(ev => ev.target.tagName === 'DIV');\n * clicksOnDivs.subscribe(x => console.log(x));\n *\n * @see {@link distinct}\n * @see {@link distinctUntilChanged}\n * @see {@link distinctUntilKeyChanged}\n * @see {@link ignoreElements}\n * @see {@link partition}\n * @see {@link skip}\n *\n * @param {function(value: T, index: number): boolean} predicate A function that\n * evaluates each value emitted by the source Observable. If it returns `true`,\n * the value is emitted, if `false` the value is not passed to the output\n * Observable. The `index` parameter is the number `i` for the i-th source\n * emission that has happened since the subscription, starting from the number\n * `0`.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return {Observable} An Observable of values from the source that were\n * allowed by the `predicate` function.\n * @method filter\n * @owner Observable\n */\nfunction filter(predicate, thisArg) {\n    return filter_1.filter(predicate, thisArg)(this);\n}\nexports.filter = filter;\n//# sourceMappingURL=filter.js.map\n\n//# sourceURL=webpack:///./node_modules/@sanity/observable/node_modules/rxjs/operator/filter.js?");

/***/ }),

/***/ "./node_modules/@sanity/observable/node_modules/rxjs/operator/map.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@sanity/observable/node_modules/rxjs/operator/map.js ***!
  \***************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar map_1 = __webpack_require__(/*! ../operators/map */ \"./node_modules/@sanity/observable/node_modules/rxjs/operators/map.js\");\n/**\n * Applies a given `project` function to each value emitted by the source\n * Observable, and emits the resulting values as an Observable.\n *\n * <span class=\"informal\">Like [Array.prototype.map()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map),\n * it passes each source value through a transformation function to get\n * corresponding output values.</span>\n *\n * <img src=\"./img/map.png\" width=\"100%\">\n *\n * Similar to the well known `Array.prototype.map` function, this operator\n * applies a projection to each value and emits that projection in the output\n * Observable.\n *\n * @example <caption>Map every click to the clientX position of that click</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var positions = clicks.map(ev => ev.clientX);\n * positions.subscribe(x => console.log(x));\n *\n * @see {@link mapTo}\n * @see {@link pluck}\n *\n * @param {function(value: T, index: number): R} project The function to apply\n * to each `value` emitted by the source Observable. The `index` parameter is\n * the number `i` for the i-th emission that has happened since the\n * subscription, starting from the number `0`.\n * @param {any} [thisArg] An optional argument to define what `this` is in the\n * `project` function.\n * @return {Observable<R>} An Observable that emits the values from the source\n * Observable transformed by the given `project` function.\n * @method map\n * @owner Observable\n */\nfunction map(project, thisArg) {\n    return map_1.map(project, thisArg)(this);\n}\nexports.map = map;\n//# sourceMappingURL=map.js.map\n\n//# sourceURL=webpack:///./node_modules/@sanity/observable/node_modules/rxjs/operator/map.js?");

/***/ }),

/***/ "./node_modules/@sanity/observable/node_modules/rxjs/operator/reduce.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@sanity/observable/node_modules/rxjs/operator/reduce.js ***!
  \******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar reduce_1 = __webpack_require__(/*! ../operators/reduce */ \"./node_modules/@sanity/observable/node_modules/rxjs/operators/reduce.js\");\n/* tslint:enable:max-line-length */\n/**\n * Applies an accumulator function over the source Observable, and returns the\n * accumulated result when the source completes, given an optional seed value.\n *\n * <span class=\"informal\">Combines together all values emitted on the source,\n * using an accumulator function that knows how to join a new source value into\n * the accumulation from the past.</span>\n *\n * <img src=\"./img/reduce.png\" width=\"100%\">\n *\n * Like\n * [Array.prototype.reduce()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce),\n * `reduce` applies an `accumulator` function against an accumulation and each\n * value of the source Observable (from the past) to reduce it to a single\n * value, emitted on the output Observable. Note that `reduce` will only emit\n * one value, only when the source Observable completes. It is equivalent to\n * applying operator {@link scan} followed by operator {@link last}.\n *\n * Returns an Observable that applies a specified `accumulator` function to each\n * item emitted by the source Observable. If a `seed` value is specified, then\n * that value will be used as the initial value for the accumulator. If no seed\n * value is specified, the first item of the source is used as the seed.\n *\n * @example <caption>Count the number of click events that happened in 5 seconds</caption>\n * var clicksInFiveSeconds = Rx.Observable.fromEvent(document, 'click')\n *   .takeUntil(Rx.Observable.interval(5000));\n * var ones = clicksInFiveSeconds.mapTo(1);\n * var seed = 0;\n * var count = ones.reduce((acc, one) => acc + one, seed);\n * count.subscribe(x => console.log(x));\n *\n * @see {@link count}\n * @see {@link expand}\n * @see {@link mergeScan}\n * @see {@link scan}\n *\n * @param {function(acc: R, value: T, index: number): R} accumulator The accumulator function\n * called on each source value.\n * @param {R} [seed] The initial accumulation value.\n * @return {Observable<R>} An Observable that emits a single value that is the\n * result of accumulating the values emitted by the source Observable.\n * @method reduce\n * @owner Observable\n */\nfunction reduce(accumulator, seed) {\n    // providing a seed of `undefined` *should* be valid and trigger\n    // hasSeed! so don't use `seed !== undefined` checks!\n    // For this reason, we have to check it here at the original call site\n    // otherwise inside Operator/Subscriber we won't know if `undefined`\n    // means they didn't provide anything or if they literally provided `undefined`\n    if (arguments.length >= 2) {\n        return reduce_1.reduce(accumulator, seed)(this);\n    }\n    return reduce_1.reduce(accumulator)(this);\n}\nexports.reduce = reduce;\n//# sourceMappingURL=reduce.js.map\n\n//# sourceURL=webpack:///./node_modules/@sanity/observable/node_modules/rxjs/operator/reduce.js?");

/***/ }),

/***/ "./node_modules/@sanity/observable/node_modules/rxjs/operator/toPromise.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@sanity/observable/node_modules/rxjs/operator/toPromise.js ***!
  \*********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar Observable_1 = __webpack_require__(/*! ../Observable */ \"./node_modules/@sanity/observable/node_modules/rxjs/Observable.js\");\n// HACK: this is here for backward compatability\n// TODO(benlesh): remove this in v6.\nexports.toPromise = Observable_1.Observable.prototype.toPromise;\n//# sourceMappingURL=toPromise.js.map\n\n//# sourceURL=webpack:///./node_modules/@sanity/observable/node_modules/rxjs/operator/toPromise.js?");

/***/ }),

/***/ "./node_modules/@sanity/observable/node_modules/rxjs/operators/defaultIfEmpty.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@sanity/observable/node_modules/rxjs/operators/defaultIfEmpty.js ***!
  \***************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = __webpack_require__(/*! ../Subscriber */ \"./node_modules/@sanity/observable/node_modules/rxjs/Subscriber.js\");\n/* tslint:enable:max-line-length */\n/**\n * Emits a given value if the source Observable completes without emitting any\n * `next` value, otherwise mirrors the source Observable.\n *\n * <span class=\"informal\">If the source Observable turns out to be empty, then\n * this operator will emit a default value.</span>\n *\n * <img src=\"./img/defaultIfEmpty.png\" width=\"100%\">\n *\n * `defaultIfEmpty` emits the values emitted by the source Observable or a\n * specified default value if the source Observable is empty (completes without\n * having emitted any `next` value).\n *\n * @example <caption>If no clicks happen in 5 seconds, then emit \"no clicks\"</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var clicksBeforeFive = clicks.takeUntil(Rx.Observable.interval(5000));\n * var result = clicksBeforeFive.defaultIfEmpty('no clicks');\n * result.subscribe(x => console.log(x));\n *\n * @see {@link empty}\n * @see {@link last}\n *\n * @param {any} [defaultValue=null] The default value used if the source\n * Observable is empty.\n * @return {Observable} An Observable that emits either the specified\n * `defaultValue` if the source Observable emits no items, or the values emitted\n * by the source Observable.\n * @method defaultIfEmpty\n * @owner Observable\n */\nfunction defaultIfEmpty(defaultValue) {\n    if (defaultValue === void 0) { defaultValue = null; }\n    return function (source) { return source.lift(new DefaultIfEmptyOperator(defaultValue)); };\n}\nexports.defaultIfEmpty = defaultIfEmpty;\nvar DefaultIfEmptyOperator = (function () {\n    function DefaultIfEmptyOperator(defaultValue) {\n        this.defaultValue = defaultValue;\n    }\n    DefaultIfEmptyOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new DefaultIfEmptySubscriber(subscriber, this.defaultValue));\n    };\n    return DefaultIfEmptyOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar DefaultIfEmptySubscriber = (function (_super) {\n    __extends(DefaultIfEmptySubscriber, _super);\n    function DefaultIfEmptySubscriber(destination, defaultValue) {\n        _super.call(this, destination);\n        this.defaultValue = defaultValue;\n        this.isEmpty = true;\n    }\n    DefaultIfEmptySubscriber.prototype._next = function (value) {\n        this.isEmpty = false;\n        this.destination.next(value);\n    };\n    DefaultIfEmptySubscriber.prototype._complete = function () {\n        if (this.isEmpty) {\n            this.destination.next(this.defaultValue);\n        }\n        this.destination.complete();\n    };\n    return DefaultIfEmptySubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=defaultIfEmpty.js.map\n\n//# sourceURL=webpack:///./node_modules/@sanity/observable/node_modules/rxjs/operators/defaultIfEmpty.js?");

/***/ }),

/***/ "./node_modules/@sanity/observable/node_modules/rxjs/operators/filter.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@sanity/observable/node_modules/rxjs/operators/filter.js ***!
  \*******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = __webpack_require__(/*! ../Subscriber */ \"./node_modules/@sanity/observable/node_modules/rxjs/Subscriber.js\");\n/* tslint:enable:max-line-length */\n/**\n * Filter items emitted by the source Observable by only emitting those that\n * satisfy a specified predicate.\n *\n * <span class=\"informal\">Like\n * [Array.prototype.filter()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter),\n * it only emits a value from the source if it passes a criterion function.</span>\n *\n * <img src=\"./img/filter.png\" width=\"100%\">\n *\n * Similar to the well-known `Array.prototype.filter` method, this operator\n * takes values from the source Observable, passes them through a `predicate`\n * function and only emits those values that yielded `true`.\n *\n * @example <caption>Emit only click events whose target was a DIV element</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var clicksOnDivs = clicks.filter(ev => ev.target.tagName === 'DIV');\n * clicksOnDivs.subscribe(x => console.log(x));\n *\n * @see {@link distinct}\n * @see {@link distinctUntilChanged}\n * @see {@link distinctUntilKeyChanged}\n * @see {@link ignoreElements}\n * @see {@link partition}\n * @see {@link skip}\n *\n * @param {function(value: T, index: number): boolean} predicate A function that\n * evaluates each value emitted by the source Observable. If it returns `true`,\n * the value is emitted, if `false` the value is not passed to the output\n * Observable. The `index` parameter is the number `i` for the i-th source\n * emission that has happened since the subscription, starting from the number\n * `0`.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return {Observable} An Observable of values from the source that were\n * allowed by the `predicate` function.\n * @method filter\n * @owner Observable\n */\nfunction filter(predicate, thisArg) {\n    return function filterOperatorFunction(source) {\n        return source.lift(new FilterOperator(predicate, thisArg));\n    };\n}\nexports.filter = filter;\nvar FilterOperator = (function () {\n    function FilterOperator(predicate, thisArg) {\n        this.predicate = predicate;\n        this.thisArg = thisArg;\n    }\n    FilterOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new FilterSubscriber(subscriber, this.predicate, this.thisArg));\n    };\n    return FilterOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar FilterSubscriber = (function (_super) {\n    __extends(FilterSubscriber, _super);\n    function FilterSubscriber(destination, predicate, thisArg) {\n        _super.call(this, destination);\n        this.predicate = predicate;\n        this.thisArg = thisArg;\n        this.count = 0;\n    }\n    // the try catch block below is left specifically for\n    // optimization and perf reasons. a tryCatcher is not necessary here.\n    FilterSubscriber.prototype._next = function (value) {\n        var result;\n        try {\n            result = this.predicate.call(this.thisArg, value, this.count++);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        if (result) {\n            this.destination.next(value);\n        }\n    };\n    return FilterSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=filter.js.map\n\n//# sourceURL=webpack:///./node_modules/@sanity/observable/node_modules/rxjs/operators/filter.js?");

/***/ }),

/***/ "./node_modules/@sanity/observable/node_modules/rxjs/operators/map.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@sanity/observable/node_modules/rxjs/operators/map.js ***!
  \****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = __webpack_require__(/*! ../Subscriber */ \"./node_modules/@sanity/observable/node_modules/rxjs/Subscriber.js\");\n/**\n * Applies a given `project` function to each value emitted by the source\n * Observable, and emits the resulting values as an Observable.\n *\n * <span class=\"informal\">Like [Array.prototype.map()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map),\n * it passes each source value through a transformation function to get\n * corresponding output values.</span>\n *\n * <img src=\"./img/map.png\" width=\"100%\">\n *\n * Similar to the well known `Array.prototype.map` function, this operator\n * applies a projection to each value and emits that projection in the output\n * Observable.\n *\n * @example <caption>Map every click to the clientX position of that click</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var positions = clicks.map(ev => ev.clientX);\n * positions.subscribe(x => console.log(x));\n *\n * @see {@link mapTo}\n * @see {@link pluck}\n *\n * @param {function(value: T, index: number): R} project The function to apply\n * to each `value` emitted by the source Observable. The `index` parameter is\n * the number `i` for the i-th emission that has happened since the\n * subscription, starting from the number `0`.\n * @param {any} [thisArg] An optional argument to define what `this` is in the\n * `project` function.\n * @return {Observable<R>} An Observable that emits the values from the source\n * Observable transformed by the given `project` function.\n * @method map\n * @owner Observable\n */\nfunction map(project, thisArg) {\n    return function mapOperation(source) {\n        if (typeof project !== 'function') {\n            throw new TypeError('argument is not a function. Are you looking for `mapTo()`?');\n        }\n        return source.lift(new MapOperator(project, thisArg));\n    };\n}\nexports.map = map;\nvar MapOperator = (function () {\n    function MapOperator(project, thisArg) {\n        this.project = project;\n        this.thisArg = thisArg;\n    }\n    MapOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new MapSubscriber(subscriber, this.project, this.thisArg));\n    };\n    return MapOperator;\n}());\nexports.MapOperator = MapOperator;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar MapSubscriber = (function (_super) {\n    __extends(MapSubscriber, _super);\n    function MapSubscriber(destination, project, thisArg) {\n        _super.call(this, destination);\n        this.project = project;\n        this.count = 0;\n        this.thisArg = thisArg || this;\n    }\n    // NOTE: This looks unoptimized, but it's actually purposefully NOT\n    // using try/catch optimizations.\n    MapSubscriber.prototype._next = function (value) {\n        var result;\n        try {\n            result = this.project.call(this.thisArg, value, this.count++);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    };\n    return MapSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=map.js.map\n\n//# sourceURL=webpack:///./node_modules/@sanity/observable/node_modules/rxjs/operators/map.js?");

/***/ }),

/***/ "./node_modules/@sanity/observable/node_modules/rxjs/operators/reduce.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@sanity/observable/node_modules/rxjs/operators/reduce.js ***!
  \*******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar scan_1 = __webpack_require__(/*! ./scan */ \"./node_modules/@sanity/observable/node_modules/rxjs/operators/scan.js\");\nvar takeLast_1 = __webpack_require__(/*! ./takeLast */ \"./node_modules/@sanity/observable/node_modules/rxjs/operators/takeLast.js\");\nvar defaultIfEmpty_1 = __webpack_require__(/*! ./defaultIfEmpty */ \"./node_modules/@sanity/observable/node_modules/rxjs/operators/defaultIfEmpty.js\");\nvar pipe_1 = __webpack_require__(/*! ../util/pipe */ \"./node_modules/@sanity/observable/node_modules/rxjs/util/pipe.js\");\n/* tslint:enable:max-line-length */\n/**\n * Applies an accumulator function over the source Observable, and returns the\n * accumulated result when the source completes, given an optional seed value.\n *\n * <span class=\"informal\">Combines together all values emitted on the source,\n * using an accumulator function that knows how to join a new source value into\n * the accumulation from the past.</span>\n *\n * <img src=\"./img/reduce.png\" width=\"100%\">\n *\n * Like\n * [Array.prototype.reduce()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce),\n * `reduce` applies an `accumulator` function against an accumulation and each\n * value of the source Observable (from the past) to reduce it to a single\n * value, emitted on the output Observable. Note that `reduce` will only emit\n * one value, only when the source Observable completes. It is equivalent to\n * applying operator {@link scan} followed by operator {@link last}.\n *\n * Returns an Observable that applies a specified `accumulator` function to each\n * item emitted by the source Observable. If a `seed` value is specified, then\n * that value will be used as the initial value for the accumulator. If no seed\n * value is specified, the first item of the source is used as the seed.\n *\n * @example <caption>Count the number of click events that happened in 5 seconds</caption>\n * var clicksInFiveSeconds = Rx.Observable.fromEvent(document, 'click')\n *   .takeUntil(Rx.Observable.interval(5000));\n * var ones = clicksInFiveSeconds.mapTo(1);\n * var seed = 0;\n * var count = ones.reduce((acc, one) => acc + one, seed);\n * count.subscribe(x => console.log(x));\n *\n * @see {@link count}\n * @see {@link expand}\n * @see {@link mergeScan}\n * @see {@link scan}\n *\n * @param {function(acc: R, value: T, index: number): R} accumulator The accumulator function\n * called on each source value.\n * @param {R} [seed] The initial accumulation value.\n * @return {Observable<R>} An Observable that emits a single value that is the\n * result of accumulating the values emitted by the source Observable.\n * @method reduce\n * @owner Observable\n */\nfunction reduce(accumulator, seed) {\n    // providing a seed of `undefined` *should* be valid and trigger\n    // hasSeed! so don't use `seed !== undefined` checks!\n    // For this reason, we have to check it here at the original call site\n    // otherwise inside Operator/Subscriber we won't know if `undefined`\n    // means they didn't provide anything or if they literally provided `undefined`\n    if (arguments.length >= 2) {\n        return function reduceOperatorFunctionWithSeed(source) {\n            return pipe_1.pipe(scan_1.scan(accumulator, seed), takeLast_1.takeLast(1), defaultIfEmpty_1.defaultIfEmpty(seed))(source);\n        };\n    }\n    return function reduceOperatorFunction(source) {\n        return pipe_1.pipe(scan_1.scan(function (acc, value, index) {\n            return accumulator(acc, value, index + 1);\n        }), takeLast_1.takeLast(1))(source);\n    };\n}\nexports.reduce = reduce;\n//# sourceMappingURL=reduce.js.map\n\n//# sourceURL=webpack:///./node_modules/@sanity/observable/node_modules/rxjs/operators/reduce.js?");

/***/ }),

/***/ "./node_modules/@sanity/observable/node_modules/rxjs/operators/scan.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@sanity/observable/node_modules/rxjs/operators/scan.js ***!
  \*****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = __webpack_require__(/*! ../Subscriber */ \"./node_modules/@sanity/observable/node_modules/rxjs/Subscriber.js\");\n/* tslint:enable:max-line-length */\n/**\n * Applies an accumulator function over the source Observable, and returns each\n * intermediate result, with an optional seed value.\n *\n * <span class=\"informal\">It's like {@link reduce}, but emits the current\n * accumulation whenever the source emits a value.</span>\n *\n * <img src=\"./img/scan.png\" width=\"100%\">\n *\n * Combines together all values emitted on the source, using an accumulator\n * function that knows how to join a new source value into the accumulation from\n * the past. Is similar to {@link reduce}, but emits the intermediate\n * accumulations.\n *\n * Returns an Observable that applies a specified `accumulator` function to each\n * item emitted by the source Observable. If a `seed` value is specified, then\n * that value will be used as the initial value for the accumulator. If no seed\n * value is specified, the first item of the source is used as the seed.\n *\n * @example <caption>Count the number of click events</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var ones = clicks.mapTo(1);\n * var seed = 0;\n * var count = ones.scan((acc, one) => acc + one, seed);\n * count.subscribe(x => console.log(x));\n *\n * @see {@link expand}\n * @see {@link mergeScan}\n * @see {@link reduce}\n *\n * @param {function(acc: R, value: T, index: number): R} accumulator\n * The accumulator function called on each source value.\n * @param {T|R} [seed] The initial accumulation value.\n * @return {Observable<R>} An observable of the accumulated values.\n * @method scan\n * @owner Observable\n */\nfunction scan(accumulator, seed) {\n    var hasSeed = false;\n    // providing a seed of `undefined` *should* be valid and trigger\n    // hasSeed! so don't use `seed !== undefined` checks!\n    // For this reason, we have to check it here at the original call site\n    // otherwise inside Operator/Subscriber we won't know if `undefined`\n    // means they didn't provide anything or if they literally provided `undefined`\n    if (arguments.length >= 2) {\n        hasSeed = true;\n    }\n    return function scanOperatorFunction(source) {\n        return source.lift(new ScanOperator(accumulator, seed, hasSeed));\n    };\n}\nexports.scan = scan;\nvar ScanOperator = (function () {\n    function ScanOperator(accumulator, seed, hasSeed) {\n        if (hasSeed === void 0) { hasSeed = false; }\n        this.accumulator = accumulator;\n        this.seed = seed;\n        this.hasSeed = hasSeed;\n    }\n    ScanOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new ScanSubscriber(subscriber, this.accumulator, this.seed, this.hasSeed));\n    };\n    return ScanOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar ScanSubscriber = (function (_super) {\n    __extends(ScanSubscriber, _super);\n    function ScanSubscriber(destination, accumulator, _seed, hasSeed) {\n        _super.call(this, destination);\n        this.accumulator = accumulator;\n        this._seed = _seed;\n        this.hasSeed = hasSeed;\n        this.index = 0;\n    }\n    Object.defineProperty(ScanSubscriber.prototype, \"seed\", {\n        get: function () {\n            return this._seed;\n        },\n        set: function (value) {\n            this.hasSeed = true;\n            this._seed = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ScanSubscriber.prototype._next = function (value) {\n        if (!this.hasSeed) {\n            this.seed = value;\n            this.destination.next(value);\n        }\n        else {\n            return this._tryNext(value);\n        }\n    };\n    ScanSubscriber.prototype._tryNext = function (value) {\n        var index = this.index++;\n        var result;\n        try {\n            result = this.accumulator(this.seed, value, index);\n        }\n        catch (err) {\n            this.destination.error(err);\n        }\n        this.seed = result;\n        this.destination.next(result);\n    };\n    return ScanSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=scan.js.map\n\n//# sourceURL=webpack:///./node_modules/@sanity/observable/node_modules/rxjs/operators/scan.js?");

/***/ }),

/***/ "./node_modules/@sanity/observable/node_modules/rxjs/operators/takeLast.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@sanity/observable/node_modules/rxjs/operators/takeLast.js ***!
  \*********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = __webpack_require__(/*! ../Subscriber */ \"./node_modules/@sanity/observable/node_modules/rxjs/Subscriber.js\");\nvar ArgumentOutOfRangeError_1 = __webpack_require__(/*! ../util/ArgumentOutOfRangeError */ \"./node_modules/@sanity/observable/node_modules/rxjs/util/ArgumentOutOfRangeError.js\");\nvar EmptyObservable_1 = __webpack_require__(/*! ../observable/EmptyObservable */ \"./node_modules/@sanity/observable/node_modules/rxjs/observable/EmptyObservable.js\");\n/**\n * Emits only the last `count` values emitted by the source Observable.\n *\n * <span class=\"informal\">Remembers the latest `count` values, then emits those\n * only when the source completes.</span>\n *\n * <img src=\"./img/takeLast.png\" width=\"100%\">\n *\n * `takeLast` returns an Observable that emits at most the last `count` values\n * emitted by the source Observable. If the source emits fewer than `count`\n * values then all of its values are emitted. This operator must wait until the\n * `complete` notification emission from the source in order to emit the `next`\n * values on the output Observable, because otherwise it is impossible to know\n * whether or not more values will be emitted on the source. For this reason,\n * all values are emitted synchronously, followed by the complete notification.\n *\n * @example <caption>Take the last 3 values of an Observable with many values</caption>\n * var many = Rx.Observable.range(1, 100);\n * var lastThree = many.takeLast(3);\n * lastThree.subscribe(x => console.log(x));\n *\n * @see {@link take}\n * @see {@link takeUntil}\n * @see {@link takeWhile}\n * @see {@link skip}\n *\n * @throws {ArgumentOutOfRangeError} When using `takeLast(i)`, it delivers an\n * ArgumentOutOrRangeError to the Observer's `error` callback if `i < 0`.\n *\n * @param {number} count The maximum number of values to emit from the end of\n * the sequence of values emitted by the source Observable.\n * @return {Observable<T>} An Observable that emits at most the last count\n * values emitted by the source Observable.\n * @method takeLast\n * @owner Observable\n */\nfunction takeLast(count) {\n    return function takeLastOperatorFunction(source) {\n        if (count === 0) {\n            return new EmptyObservable_1.EmptyObservable();\n        }\n        else {\n            return source.lift(new TakeLastOperator(count));\n        }\n    };\n}\nexports.takeLast = takeLast;\nvar TakeLastOperator = (function () {\n    function TakeLastOperator(total) {\n        this.total = total;\n        if (this.total < 0) {\n            throw new ArgumentOutOfRangeError_1.ArgumentOutOfRangeError;\n        }\n    }\n    TakeLastOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new TakeLastSubscriber(subscriber, this.total));\n    };\n    return TakeLastOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar TakeLastSubscriber = (function (_super) {\n    __extends(TakeLastSubscriber, _super);\n    function TakeLastSubscriber(destination, total) {\n        _super.call(this, destination);\n        this.total = total;\n        this.ring = new Array();\n        this.count = 0;\n    }\n    TakeLastSubscriber.prototype._next = function (value) {\n        var ring = this.ring;\n        var total = this.total;\n        var count = this.count++;\n        if (ring.length < total) {\n            ring.push(value);\n        }\n        else {\n            var index = count % total;\n            ring[index] = value;\n        }\n    };\n    TakeLastSubscriber.prototype._complete = function () {\n        var destination = this.destination;\n        var count = this.count;\n        if (count > 0) {\n            var total = this.count >= this.total ? this.total : this.count;\n            var ring = this.ring;\n            for (var i = 0; i < total; i++) {\n                var idx = (count++) % total;\n                destination.next(ring[idx]);\n            }\n        }\n        destination.complete();\n    };\n    return TakeLastSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=takeLast.js.map\n\n//# sourceURL=webpack:///./node_modules/@sanity/observable/node_modules/rxjs/operators/takeLast.js?");

/***/ }),

/***/ "./node_modules/@sanity/observable/node_modules/rxjs/symbol/observable.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@sanity/observable/node_modules/rxjs/symbol/observable.js ***!
  \********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar root_1 = __webpack_require__(/*! ../util/root */ \"./node_modules/@sanity/observable/node_modules/rxjs/util/root.js\");\nfunction getSymbolObservable(context) {\n    var $$observable;\n    var Symbol = context.Symbol;\n    if (typeof Symbol === 'function') {\n        if (Symbol.observable) {\n            $$observable = Symbol.observable;\n        }\n        else {\n            $$observable = Symbol('observable');\n            Symbol.observable = $$observable;\n        }\n    }\n    else {\n        $$observable = '@@observable';\n    }\n    return $$observable;\n}\nexports.getSymbolObservable = getSymbolObservable;\nexports.observable = getSymbolObservable(root_1.root);\n/**\n * @deprecated use observable instead\n */\nexports.$$observable = exports.observable;\n//# sourceMappingURL=observable.js.map\n\n//# sourceURL=webpack:///./node_modules/@sanity/observable/node_modules/rxjs/symbol/observable.js?");

/***/ }),

/***/ "./node_modules/@sanity/observable/node_modules/rxjs/symbol/rxSubscriber.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@sanity/observable/node_modules/rxjs/symbol/rxSubscriber.js ***!
  \**********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar root_1 = __webpack_require__(/*! ../util/root */ \"./node_modules/@sanity/observable/node_modules/rxjs/util/root.js\");\nvar Symbol = root_1.root.Symbol;\nexports.rxSubscriber = (typeof Symbol === 'function' && typeof Symbol.for === 'function') ?\n    Symbol.for('rxSubscriber') : '@@rxSubscriber';\n/**\n * @deprecated use rxSubscriber instead\n */\nexports.$$rxSubscriber = exports.rxSubscriber;\n//# sourceMappingURL=rxSubscriber.js.map\n\n//# sourceURL=webpack:///./node_modules/@sanity/observable/node_modules/rxjs/symbol/rxSubscriber.js?");

/***/ }),

/***/ "./node_modules/@sanity/observable/node_modules/rxjs/util/ArgumentOutOfRangeError.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@sanity/observable/node_modules/rxjs/util/ArgumentOutOfRangeError.js ***!
  \*******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n/**\n * An error thrown when an element was queried at a certain index of an\n * Observable, but no such index or position exists in that sequence.\n *\n * @see {@link elementAt}\n * @see {@link take}\n * @see {@link takeLast}\n *\n * @class ArgumentOutOfRangeError\n */\nvar ArgumentOutOfRangeError = (function (_super) {\n    __extends(ArgumentOutOfRangeError, _super);\n    function ArgumentOutOfRangeError() {\n        var err = _super.call(this, 'argument out of range');\n        this.name = err.name = 'ArgumentOutOfRangeError';\n        this.stack = err.stack;\n        this.message = err.message;\n    }\n    return ArgumentOutOfRangeError;\n}(Error));\nexports.ArgumentOutOfRangeError = ArgumentOutOfRangeError;\n//# sourceMappingURL=ArgumentOutOfRangeError.js.map\n\n//# sourceURL=webpack:///./node_modules/@sanity/observable/node_modules/rxjs/util/ArgumentOutOfRangeError.js?");

/***/ }),

/***/ "./node_modules/@sanity/observable/node_modules/rxjs/util/UnsubscriptionError.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@sanity/observable/node_modules/rxjs/util/UnsubscriptionError.js ***!
  \***************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n/**\n * An error thrown when one or more errors have occurred during the\n * `unsubscribe` of a {@link Subscription}.\n */\nvar UnsubscriptionError = (function (_super) {\n    __extends(UnsubscriptionError, _super);\n    function UnsubscriptionError(errors) {\n        _super.call(this);\n        this.errors = errors;\n        var err = Error.call(this, errors ?\n            errors.length + \" errors occurred during unsubscription:\\n  \" + errors.map(function (err, i) { return ((i + 1) + \") \" + err.toString()); }).join('\\n  ') : '');\n        this.name = err.name = 'UnsubscriptionError';\n        this.stack = err.stack;\n        this.message = err.message;\n    }\n    return UnsubscriptionError;\n}(Error));\nexports.UnsubscriptionError = UnsubscriptionError;\n//# sourceMappingURL=UnsubscriptionError.js.map\n\n//# sourceURL=webpack:///./node_modules/@sanity/observable/node_modules/rxjs/util/UnsubscriptionError.js?");

/***/ }),

/***/ "./node_modules/@sanity/observable/node_modules/rxjs/util/errorObject.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@sanity/observable/node_modules/rxjs/util/errorObject.js ***!
  \*******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n// typeof any so that it we don't have to cast when comparing a result to the error object\nexports.errorObject = { e: {} };\n//# sourceMappingURL=errorObject.js.map\n\n//# sourceURL=webpack:///./node_modules/@sanity/observable/node_modules/rxjs/util/errorObject.js?");

/***/ }),

/***/ "./node_modules/@sanity/observable/node_modules/rxjs/util/isArray.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@sanity/observable/node_modules/rxjs/util/isArray.js ***!
  \***************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nexports.isArray = Array.isArray || (function (x) { return x && typeof x.length === 'number'; });\n//# sourceMappingURL=isArray.js.map\n\n//# sourceURL=webpack:///./node_modules/@sanity/observable/node_modules/rxjs/util/isArray.js?");

/***/ }),

/***/ "./node_modules/@sanity/observable/node_modules/rxjs/util/isFunction.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@sanity/observable/node_modules/rxjs/util/isFunction.js ***!
  \******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nfunction isFunction(x) {\n    return typeof x === 'function';\n}\nexports.isFunction = isFunction;\n//# sourceMappingURL=isFunction.js.map\n\n//# sourceURL=webpack:///./node_modules/@sanity/observable/node_modules/rxjs/util/isFunction.js?");

/***/ }),

/***/ "./node_modules/@sanity/observable/node_modules/rxjs/util/isObject.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@sanity/observable/node_modules/rxjs/util/isObject.js ***!
  \****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nfunction isObject(x) {\n    return x != null && typeof x === 'object';\n}\nexports.isObject = isObject;\n//# sourceMappingURL=isObject.js.map\n\n//# sourceURL=webpack:///./node_modules/@sanity/observable/node_modules/rxjs/util/isObject.js?");

/***/ }),

/***/ "./node_modules/@sanity/observable/node_modules/rxjs/util/noop.js":
/*!************************************************************************!*\
  !*** ./node_modules/@sanity/observable/node_modules/rxjs/util/noop.js ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/* tslint:disable:no-empty */\nfunction noop() { }\nexports.noop = noop;\n//# sourceMappingURL=noop.js.map\n\n//# sourceURL=webpack:///./node_modules/@sanity/observable/node_modules/rxjs/util/noop.js?");

/***/ }),

/***/ "./node_modules/@sanity/observable/node_modules/rxjs/util/pipe.js":
/*!************************************************************************!*\
  !*** ./node_modules/@sanity/observable/node_modules/rxjs/util/pipe.js ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar noop_1 = __webpack_require__(/*! ./noop */ \"./node_modules/@sanity/observable/node_modules/rxjs/util/noop.js\");\n/* tslint:enable:max-line-length */\nfunction pipe() {\n    var fns = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        fns[_i - 0] = arguments[_i];\n    }\n    return pipeFromArray(fns);\n}\nexports.pipe = pipe;\n/* @internal */\nfunction pipeFromArray(fns) {\n    if (!fns) {\n        return noop_1.noop;\n    }\n    if (fns.length === 1) {\n        return fns[0];\n    }\n    return function piped(input) {\n        return fns.reduce(function (prev, fn) { return fn(prev); }, input);\n    };\n}\nexports.pipeFromArray = pipeFromArray;\n//# sourceMappingURL=pipe.js.map\n\n//# sourceURL=webpack:///./node_modules/@sanity/observable/node_modules/rxjs/util/pipe.js?");

/***/ }),

/***/ "./node_modules/@sanity/observable/node_modules/rxjs/util/root.js":
/*!************************************************************************!*\
  !*** ./node_modules/@sanity/observable/node_modules/rxjs/util/root.js ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(global) {\n// CommonJS / Node have global context exposed as \"global\" variable.\n// We don't want to include the whole node.d.ts this this compilation unit so we'll just fake\n// the global \"global\" var for now.\nvar __window = typeof window !== 'undefined' && window;\nvar __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n    self instanceof WorkerGlobalScope && self;\nvar __global = typeof global !== 'undefined' && global;\nvar _root = __window || __global || __self;\nexports.root = _root;\n// Workaround Closure Compiler restriction: The body of a goog.module cannot use throw.\n// This is needed when used with angular/tsickle which inserts a goog.module statement.\n// Wrap in IIFE\n(function () {\n    if (!_root) {\n        throw new Error('RxJS could not find any global context (window, self, global)');\n    }\n})();\n//# sourceMappingURL=root.js.map\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../../webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\")))\n\n//# sourceURL=webpack:///./node_modules/@sanity/observable/node_modules/rxjs/util/root.js?");

/***/ }),

/***/ "./node_modules/@sanity/observable/node_modules/rxjs/util/toSubscriber.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@sanity/observable/node_modules/rxjs/util/toSubscriber.js ***!
  \********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar Subscriber_1 = __webpack_require__(/*! ../Subscriber */ \"./node_modules/@sanity/observable/node_modules/rxjs/Subscriber.js\");\nvar rxSubscriber_1 = __webpack_require__(/*! ../symbol/rxSubscriber */ \"./node_modules/@sanity/observable/node_modules/rxjs/symbol/rxSubscriber.js\");\nvar Observer_1 = __webpack_require__(/*! ../Observer */ \"./node_modules/@sanity/observable/node_modules/rxjs/Observer.js\");\nfunction toSubscriber(nextOrObserver, error, complete) {\n    if (nextOrObserver) {\n        if (nextOrObserver instanceof Subscriber_1.Subscriber) {\n            return nextOrObserver;\n        }\n        if (nextOrObserver[rxSubscriber_1.rxSubscriber]) {\n            return nextOrObserver[rxSubscriber_1.rxSubscriber]();\n        }\n    }\n    if (!nextOrObserver && !error && !complete) {\n        return new Subscriber_1.Subscriber(Observer_1.empty);\n    }\n    return new Subscriber_1.Subscriber(nextOrObserver, error, complete);\n}\nexports.toSubscriber = toSubscriber;\n//# sourceMappingURL=toSubscriber.js.map\n\n//# sourceURL=webpack:///./node_modules/@sanity/observable/node_modules/rxjs/util/toSubscriber.js?");

/***/ }),

/***/ "./node_modules/@sanity/observable/node_modules/rxjs/util/tryCatch.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@sanity/observable/node_modules/rxjs/util/tryCatch.js ***!
  \****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar errorObject_1 = __webpack_require__(/*! ./errorObject */ \"./node_modules/@sanity/observable/node_modules/rxjs/util/errorObject.js\");\nvar tryCatchTarget;\nfunction tryCatcher() {\n    try {\n        return tryCatchTarget.apply(this, arguments);\n    }\n    catch (e) {\n        errorObject_1.errorObject.e = e;\n        return errorObject_1.errorObject;\n    }\n}\nfunction tryCatch(fn) {\n    tryCatchTarget = fn;\n    return tryCatcher;\n}\nexports.tryCatch = tryCatch;\n;\n//# sourceMappingURL=tryCatch.js.map\n\n//# sourceURL=webpack:///./node_modules/@sanity/observable/node_modules/rxjs/util/tryCatch.js?");

/***/ }),

/***/ "./node_modules/deep-assign/index.js":
/*!*******************************************!*\
  !*** ./node_modules/deep-assign/index.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar isObj = __webpack_require__(/*! is-obj */ \"./node_modules/is-obj/index.js\");\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Sources cannot be null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction assignKey(to, from, key) {\n\tvar val = from[key];\n\n\tif (val === undefined || val === null) {\n\t\treturn;\n\t}\n\n\tif (hasOwnProperty.call(to, key)) {\n\t\tif (to[key] === undefined || to[key] === null) {\n\t\t\tthrow new TypeError('Cannot convert undefined or null to object (' + key + ')');\n\t\t}\n\t}\n\n\tif (!hasOwnProperty.call(to, key) || !isObj(val)) {\n\t\tto[key] = val;\n\t} else {\n\t\tto[key] = assign(Object(to[key]), from[key]);\n\t}\n}\n\nfunction assign(to, from) {\n\tif (to === from) {\n\t\treturn to;\n\t}\n\n\tfrom = Object(from);\n\n\tfor (var key in from) {\n\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\tassignKey(to, from, key);\n\t\t}\n\t}\n\n\tif (Object.getOwnPropertySymbols) {\n\t\tvar symbols = Object.getOwnPropertySymbols(from);\n\n\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\tassignKey(to, from, symbols[i]);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n}\n\nmodule.exports = function deepAssign(target) {\n\ttarget = toObject(target);\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tassign(target, arguments[s]);\n\t}\n\n\treturn target;\n};\n\n\n//# sourceURL=webpack:///./node_modules/deep-assign/index.js?");

/***/ }),

/***/ "./node_modules/eventsource-polyfill/dist/eventsource.js":
/*!***************************************************************!*\
  !*** ./node_modules/eventsource-polyfill/dist/eventsource.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/*\n   * EventSource polyfill version 0.9.6\n   * Supported by sc AmvTek srl\n   * :email: devel@amvtek.com\n */\n;(function (global) {\n\n    if (global.EventSource && !global._eventSourceImportPrefix){\n        return;\n    }\n\n    var evsImportName = (global._eventSourceImportPrefix||'')+\"EventSource\";\n\n    var EventSource = function (url, options) {\n\n        if (!url || typeof url != 'string') {\n            throw new SyntaxError('Not enough arguments');\n        }\n\n        this.URL = url;\n        this.setOptions(options);\n        var evs = this;\n        setTimeout(function(){evs.poll()}, 0);\n    };\n\n    EventSource.prototype = {\n\n        CONNECTING: 0,\n\n        OPEN: 1,\n\n        CLOSED: 2,\n\n        defaultOptions: {\n\n            loggingEnabled: false,\n\n            loggingPrefix: \"eventsource\",\n\n            interval: 500, // milliseconds\n\n            bufferSizeLimit: 256*1024, // bytes\n\n            silentTimeout: 300000, // milliseconds\n\n            getArgs:{\n                'evs_buffer_size_limit': 256*1024\n            },\n\n            xhrHeaders:{\n                'Accept': 'text/event-stream',\n                'Cache-Control': 'no-cache',\n                'X-Requested-With': 'XMLHttpRequest'\n            }\n        },\n\n        setOptions: function(options){\n\n            var defaults = this.defaultOptions;\n            var option;\n\n            // set all default options...\n            for (option in defaults){\n\n                if ( defaults.hasOwnProperty(option) ){\n                    this[option] = defaults[option];\n                }\n            }\n\n            // override with what is in options\n            for (option in options){\n\n                if (option in defaults && options.hasOwnProperty(option)){\n                    this[option] = options[option];\n                }\n            }\n\n            // if getArgs option is enabled\n            // ensure evs_buffer_size_limit corresponds to bufferSizeLimit\n            if (this.getArgs && this.bufferSizeLimit) {\n\n                this.getArgs['evs_buffer_size_limit'] = this.bufferSizeLimit;\n            }\n\n            // if console is not available, force loggingEnabled to false\n            if (typeof console === \"undefined\" || typeof console.log === \"undefined\") {\n\n                this.loggingEnabled = false;\n            }\n        },\n\n        log: function(message) {\n\n            if (this.loggingEnabled) {\n\n                console.log(\"[\" + this.loggingPrefix +\"]:\" + message)\n            }\n        },\n\n        poll: function() {\n\n            try {\n\n                if (this.readyState == this.CLOSED) {\n                    return;\n                }\n\n                this.cleanup();\n                this.readyState = this.CONNECTING;\n                this.cursor = 0;\n                this.cache = '';\n                this._xhr = new this.XHR(this);\n                this.resetNoActivityTimer();\n\n            }\n            catch (e) {\n\n                // in an attempt to silence the errors\n                this.log('There were errors inside the pool try-catch');\n                this.dispatchEvent('error', { type: 'error', data: e.message });\n            }\n        },\n\n        pollAgain: function (interval) {\n\n            // schedule poll to be called after interval milliseconds\n            var evs = this;\n            evs.readyState = evs.CONNECTING;\n            evs.dispatchEvent('error', {\n                type: 'error',\n                data: \"Reconnecting \"\n            });\n            this._pollTimer = setTimeout(function(){evs.poll()}, interval||0);\n        },\n\n\n        cleanup: function() {\n\n            this.log('evs cleaning up')\n\n            if (this._pollTimer){\n                clearInterval(this._pollTimer);\n                this._pollTimer = null;\n            }\n\n            if (this._noActivityTimer){\n                clearInterval(this._noActivityTimer);\n                this._noActivityTimer = null;\n            }\n\n            if (this._xhr){\n                this._xhr.abort();\n                this._xhr = null;\n            }\n        },\n\n        resetNoActivityTimer: function(){\n\n            if (this.silentTimeout){\n\n                if (this._noActivityTimer){\n                    clearInterval(this._noActivityTimer);\n                }\n                var evs = this;\n                this._noActivityTimer = setTimeout(\n                        function(){ evs.log('Timeout! silentTImeout:'+evs.silentTimeout); evs.pollAgain(); },\n                        this.silentTimeout\n                        );\n            }\n        },\n\n        close: function () {\n\n            this.readyState = this.CLOSED;\n            this.log('Closing connection. readyState: '+this.readyState);\n            this.cleanup();\n        },\n\n        ondata: function() {\n\n            var request = this._xhr;\n\n            if (request.isReady() && !request.hasError() ) {\n                // reset the timer, as we have activity\n                this.resetNoActivityTimer();\n\n                // move this EventSource to OPEN state...\n                if (this.readyState == this.CONNECTING) {\n                    this.readyState = this.OPEN;\n                    this.dispatchEvent('open', { type: 'open' });\n                }\n\n                var buffer = request.getBuffer();\n\n                if (buffer.length > this.bufferSizeLimit) {\n                    this.log('buffer.length > this.bufferSizeLimit');\n                    this.pollAgain();\n                }\n\n                if (this.cursor == 0 && buffer.length > 0){\n\n                    // skip byte order mark \\uFEFF character if it starts the stream\n                    if (buffer.substring(0,1) == '\\uFEFF'){\n                        this.cursor = 1;\n                    }\n                }\n\n                var lastMessageIndex = this.lastMessageIndex(buffer);\n                if (lastMessageIndex[0] >= this.cursor){\n\n                    var newcursor = lastMessageIndex[1];\n                    var toparse = buffer.substring(this.cursor, newcursor);\n                    this.parseStream(toparse);\n                    this.cursor = newcursor;\n                }\n\n                // if request is finished, reopen the connection\n                if (request.isDone()) {\n                    this.log('request.isDone(). reopening the connection');\n                    this.pollAgain(this.interval);\n                }\n            }\n            else if (this.readyState !== this.CLOSED) {\n\n                this.log('this.readyState !== this.CLOSED');\n                this.pollAgain(this.interval);\n\n                //MV: Unsure why an error was previously dispatched\n            }\n        },\n\n        parseStream: function(chunk) {\n\n            // normalize line separators (\\r\\n,\\r,\\n) to \\n\n            // remove white spaces that may precede \\n\n            chunk = this.cache + this.normalizeToLF(chunk);\n\n            var events = chunk.split('\\n\\n');\n\n            var i, j, eventType, datas, line, retry;\n\n            for (i=0; i < (events.length - 1); i++) {\n\n                eventType = 'message';\n                datas = [];\n                parts = events[i].split('\\n');\n\n                for (j=0; j < parts.length; j++) {\n\n                    line = this.trimWhiteSpace(parts[j]);\n\n                    if (line.indexOf('event') == 0) {\n\n                        eventType = line.replace(/event:?\\s*/, '');\n                    }\n                    else if (line.indexOf('retry') == 0) {\n\n                        retry = parseInt(line.replace(/retry:?\\s*/, ''));\n                        if(!isNaN(retry)) {\n                            this.interval = retry;\n                        }\n                    }\n                    else if (line.indexOf('data') == 0) {\n\n                        datas.push(line.replace(/data:?\\s*/, ''));\n                    }\n                    else if (line.indexOf('id:') == 0) {\n\n                        this.lastEventId = line.replace(/id:?\\s*/, '');\n                    }\n                    else if (line.indexOf('id') == 0) { // this resets the id\n\n                        this.lastEventId = null;\n                    }\n                }\n\n                if (datas.length) {\n                    // dispatch a new event\n                    var event = new MessageEvent(eventType, datas.join('\\n'), window.location.origin, this.lastEventId);\n                    this.dispatchEvent(eventType, event);\n                }\n            }\n\n            this.cache = events[events.length - 1];\n        },\n\n        dispatchEvent: function (type, event) {\n            var handlers = this['_' + type + 'Handlers'];\n\n            if (handlers) {\n\n                for (var i = 0; i < handlers.length; i++) {\n                    handlers[i].call(this, event);\n                }\n            }\n\n            if (this['on' + type]) {\n                this['on' + type].call(this, event);\n            }\n\n        },\n\n        addEventListener: function (type, handler) {\n            if (!this['_' + type + 'Handlers']) {\n                this['_' + type + 'Handlers'] = [];\n            }\n\n            this['_' + type + 'Handlers'].push(handler);\n        },\n\n        removeEventListener: function (type, handler) {\n            var handlers = this['_' + type + 'Handlers'];\n            if (!handlers) {\n                return;\n            }\n            for (var i = handlers.length - 1; i >= 0; --i) {\n                if (handlers[i] === handler) {\n                    handlers.splice(i, 1);\n                    break;\n                }\n            }\n        },\n\n        _pollTimer: null,\n\n        _noactivityTimer: null,\n\n        _xhr: null,\n\n        lastEventId: null,\n\n        cache: '',\n\n        cursor: 0,\n\n        onerror: null,\n\n        onmessage: null,\n\n        onopen: null,\n\n        readyState: 0,\n\n        // ===================================================================\n        // helpers functions\n        // those are attached to prototype to ease reuse and testing...\n\n        urlWithParams: function (baseURL, params) {\n\n            var encodedArgs = [];\n\n            if (params){\n\n                var key, urlarg;\n                var urlize = encodeURIComponent;\n\n                for (key in params){\n                    if (params.hasOwnProperty(key)) {\n                        urlarg = urlize(key)+'='+urlize(params[key]);\n                        encodedArgs.push(urlarg);\n                    }\n                }\n            }\n\n            if (encodedArgs.length > 0){\n\n                if (baseURL.indexOf('?') == -1)\n                    return baseURL + '?' + encodedArgs.join('&');\n                return baseURL + '&' + encodedArgs.join('&');\n            }\n            return baseURL;\n        },\n\n        lastMessageIndex: function(text) {\n\n            var ln2 =text.lastIndexOf('\\n\\n');\n            var lr2 = text.lastIndexOf('\\r\\r');\n            var lrln2 = text.lastIndexOf('\\r\\n\\r\\n');\n\n            if (lrln2 > Math.max(ln2, lr2)) {\n                return [lrln2, lrln2+4];\n            }\n            return [Math.max(ln2, lr2), Math.max(ln2, lr2) + 2]\n        },\n\n        trimWhiteSpace: function(str) {\n            // to remove whitespaces left and right of string\n\n            var reTrim = /^(\\s|\\u00A0)+|(\\s|\\u00A0)+$/g;\n            return str.replace(reTrim, '');\n        },\n\n        normalizeToLF: function(str) {\n\n            // replace \\r and \\r\\n with \\n\n            return str.replace(/\\r\\n|\\r/g, '\\n');\n        }\n\n    };\n\n    if (!isOldIE()){\n\n        EventSource.isPolyfill = \"XHR\";\n\n        // EventSource will send request using XMLHttpRequest\n        EventSource.prototype.XHR = function(evs) {\n\n            request = new XMLHttpRequest();\n            this._request = request;\n            evs._xhr = this;\n\n            // set handlers\n            request.onreadystatechange = function(){\n                if (request.readyState > 1 && evs.readyState != evs.CLOSED) {\n                    if (request.status == 200 || (request.status>=300 && request.status<400)){\n                        evs.ondata();\n                    }\n                    else {\n                        request._failed = true;\n                        evs.readyState = evs.CLOSED;\n                        evs.dispatchEvent('error', {\n                            type: 'error',\n                            data: \"The server responded with \"+request.status\n                        });\n                        evs.close();\n                    }\n                }\n            };\n\n            request.onprogress = function () {\n            };\n\n            request.open('GET', evs.urlWithParams(evs.URL, evs.getArgs), true);\n\n            var headers = evs.xhrHeaders; // maybe null\n            for (var header in headers) {\n                if (headers.hasOwnProperty(header)){\n                    request.setRequestHeader(header, headers[header]);\n                }\n            }\n            if (evs.lastEventId) {\n                request.setRequestHeader('Last-Event-Id', evs.lastEventId);\n            }\n\n            request.send();\n        };\n\n        EventSource.prototype.XHR.prototype = {\n\n            useXDomainRequest: false,\n\n            _request: null,\n\n            _failed: false, // true if we have had errors...\n\n            isReady: function() {\n\n\n                return this._request.readyState >= 2;\n            },\n\n            isDone: function() {\n\n                return (this._request.readyState == 4);\n            },\n\n            hasError: function() {\n\n                return (this._failed || (this._request.status >= 400));\n            },\n\n            getBuffer: function() {\n\n                var rv = '';\n                try {\n                    rv = this._request.responseText || '';\n                }\n                catch (e){}\n                return rv;\n            },\n\n            abort: function() {\n\n                if ( this._request ) {\n                    this._request.abort();\n                }\n            }\n        };\n    }\n    else {\n\n\tEventSource.isPolyfill = \"IE_8-9\";\n\n        // patch EventSource defaultOptions\n        var defaults = EventSource.prototype.defaultOptions;\n        defaults.xhrHeaders = null; // no headers will be sent\n        defaults.getArgs['evs_preamble'] = 2048 + 8;\n\n        // EventSource will send request using Internet Explorer XDomainRequest\n        EventSource.prototype.XHR = function(evs) {\n\n            request = new XDomainRequest();\n            this._request = request;\n\n            // set handlers\n            request.onprogress = function(){\n                request._ready = true;\n                evs.ondata();\n            };\n\n            request.onload = function(){\n                this._loaded = true;\n                evs.ondata();\n            };\n\n            request.onerror = function(){\n                this._failed = true;\n                evs.readyState = evs.CLOSED;\n                evs.dispatchEvent('error', {\n                    type: 'error',\n                    data: \"XDomainRequest error\"\n                });\n            };\n\n            request.ontimeout = function(){\n                this._failed = true;\n                evs.readyState = evs.CLOSED;\n                evs.dispatchEvent('error', {\n                    type: 'error',\n                    data: \"XDomainRequest timed out\"\n                });\n            };\n\n            // XDomainRequest does not allow setting custom headers\n            // If EventSource has enabled the use of GET arguments\n            // we add parameters to URL so that server can adapt the stream...\n            var reqGetArgs = {};\n            if (evs.getArgs) {\n\n                // copy evs.getArgs in reqGetArgs\n                var defaultArgs = evs.getArgs;\n                    for (var key in defaultArgs) {\n                        if (defaultArgs.hasOwnProperty(key)){\n                            reqGetArgs[key] = defaultArgs[key];\n                        }\n                    }\n                if (evs.lastEventId){\n                    reqGetArgs['evs_last_event_id'] = evs.lastEventId;\n                }\n            }\n            // send the request\n\n            request.open('GET', evs.urlWithParams(evs.URL,reqGetArgs));\n            request.send();\n        };\n\n        EventSource.prototype.XHR.prototype = {\n\n            useXDomainRequest: true,\n\n            _request: null,\n\n            _ready: false, // true when progress events are dispatched\n\n            _loaded: false, // true when request has been loaded\n\n            _failed: false, // true if when request is in error\n\n            isReady: function() {\n\n                return this._request._ready;\n            },\n\n            isDone: function() {\n\n                return this._request._loaded;\n            },\n\n            hasError: function() {\n\n                return this._request._failed;\n            },\n\n            getBuffer: function() {\n\n                var rv = '';\n                try {\n                    rv = this._request.responseText || '';\n                }\n                catch (e){}\n                return rv;\n            },\n\n            abort: function() {\n\n                if ( this._request){\n                    this._request.abort();\n                }\n            }\n        };\n    }\n\n    function MessageEvent(type, data, origin, lastEventId) {\n\n        this.bubbles = false;\n        this.cancelBubble = false;\n        this.cancelable = false;\n        this.data = data || null;\n        this.origin = origin || '';\n        this.lastEventId = lastEventId || '';\n        this.type = type || 'message';\n    }\n\n    function isOldIE () {\n\n        //return true if we are in IE8 or IE9\n        return (window.XDomainRequest && (window.XMLHttpRequest && new XMLHttpRequest().responseType === undefined)) ? true : false;\n    }\n\n    global[evsImportName] = EventSource;\n})(this);\n\n\n//# sourceURL=webpack:///./node_modules/eventsource-polyfill/dist/eventsource.js?");

/***/ }),

/***/ "./node_modules/for-each/index.js":
/*!****************************************!*\
  !*** ./node_modules/for-each/index.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var isFunction = __webpack_require__(/*! is-function */ \"./node_modules/is-function/index.js\")\n\nmodule.exports = forEach\n\nvar toString = Object.prototype.toString\nvar hasOwnProperty = Object.prototype.hasOwnProperty\n\nfunction forEach(list, iterator, context) {\n    if (!isFunction(iterator)) {\n        throw new TypeError('iterator must be a function')\n    }\n\n    if (arguments.length < 3) {\n        context = this\n    }\n    \n    if (toString.call(list) === '[object Array]')\n        forEachArray(list, iterator, context)\n    else if (typeof list === 'string')\n        forEachString(list, iterator, context)\n    else\n        forEachObject(list, iterator, context)\n}\n\nfunction forEachArray(array, iterator, context) {\n    for (var i = 0, len = array.length; i < len; i++) {\n        if (hasOwnProperty.call(array, i)) {\n            iterator.call(context, array[i], i, array)\n        }\n    }\n}\n\nfunction forEachString(string, iterator, context) {\n    for (var i = 0, len = string.length; i < len; i++) {\n        // no such thing as a sparse string.\n        iterator.call(context, string.charAt(i), i, string)\n    }\n}\n\nfunction forEachObject(object, iterator, context) {\n    for (var k in object) {\n        if (hasOwnProperty.call(object, k)) {\n            iterator.call(context, object[k], k, object)\n        }\n    }\n}\n\n\n//# sourceURL=webpack:///./node_modules/for-each/index.js?");

/***/ }),

/***/ "./node_modules/get-it/index.js":
/*!**************************************!*\
  !*** ./node_modules/get-it/index.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = __webpack_require__(/*! ./lib-node */ \"./node_modules/get-it/lib/index.js\")\n\n\n//# sourceURL=webpack:///./node_modules/get-it/index.js?");

/***/ }),

/***/ "./node_modules/get-it/lib/index.js":
/*!******************************************!*\
  !*** ./node_modules/get-it/lib/index.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar pubsub = __webpack_require__(/*! nano-pubsub */ \"./node_modules/nano-pubsub/index.js\");\nvar middlewareReducer = __webpack_require__(/*! ./util/middlewareReducer */ \"./node_modules/get-it/lib/util/middlewareReducer.js\");\nvar processOptions = __webpack_require__(/*! ./middleware/defaultOptionsProcessor */ \"./node_modules/get-it/lib/middleware/defaultOptionsProcessor.js\");\nvar validateOptions = __webpack_require__(/*! ./middleware/defaultOptionsValidator */ \"./node_modules/get-it/lib/middleware/defaultOptionsValidator.js\");\nvar httpRequest = __webpack_require__(/*! ./request */ \"./node_modules/get-it/lib/request/index.js\"); // node-request in node, browser-request in browsers\n\nvar channelNames = ['request', 'response', 'progress', 'error', 'abort'];\nvar middlehooks = ['processOptions', 'validateOptions', 'interceptRequest', 'onRequest', 'onResponse', 'onError', 'onReturn', 'onHeaders'];\n\nmodule.exports = function createRequester() {\n  var initMiddleware = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n  var loadedMiddleware = [];\n  var middleware = middlehooks.reduce(function (ware, name) {\n    ware[name] = ware[name] || [];\n    return ware;\n  }, {\n    processOptions: [processOptions],\n    validateOptions: [validateOptions]\n  });\n\n  function request(opts) {\n    var channels = channelNames.reduce(function (target, name) {\n      target[name] = pubsub();\n      return target;\n    }, {});\n\n    // Prepare a middleware reducer that can be reused throughout the lifecycle\n    var applyMiddleware = middlewareReducer(middleware);\n\n    // Parse the passed options\n    var options = applyMiddleware('processOptions', opts);\n\n    // Validate the options\n    applyMiddleware('validateOptions', options);\n\n    // Build a context object we can pass to child handlers\n    var context = { options: options, channels: channels, applyMiddleware: applyMiddleware\n\n      // We need to hold a reference to the current, ongoing request,\n      // in order to allow cancellation. In the case of the retry middleware,\n      // a new request might be triggered\n    };var ongoingRequest = null;\n    var unsubscribe = channels.request.subscribe(function (ctx) {\n      // Let request adapters (node/browser) perform the actual request\n      ongoingRequest = httpRequest(ctx, function (err, res) {\n        return onResponse(err, res, ctx);\n      });\n    });\n\n    // If we abort the request, prevent further requests from happening,\n    // and be sure to cancel any ongoing request (obviously)\n    channels.abort.subscribe(function () {\n      unsubscribe();\n      if (ongoingRequest) {\n        ongoingRequest.abort();\n      }\n    });\n\n    // See if any middleware wants to modify the return value - for instance\n    // the promise or observable middlewares\n    var returnValue = applyMiddleware('onReturn', channels, context);\n\n    // If return value has been modified by a middleware, we expect the middleware\n    // to publish on the 'request' channel. If it hasn't been modified, we want to\n    // trigger it right away\n    if (returnValue === channels) {\n      channels.request.publish(context);\n    }\n\n    return returnValue;\n\n    function onResponse(reqErr, res, ctx) {\n      var error = reqErr;\n      var response = res;\n\n      // We're processing non-errors first, in case a middleware converts the\n      // response into an error (for instance, status >= 400 == HttpError)\n      if (!error) {\n        try {\n          response = applyMiddleware('onResponse', res, ctx);\n        } catch (err) {\n          response = null;\n          error = err;\n        }\n      }\n\n      // Apply error middleware - if middleware return the same (or a different) error,\n      // publish as an error event. If we *don't* return an error, assume it has been handled\n      error = error && applyMiddleware('onError', error, ctx);\n\n      // Figure out if we should publish on error/response channels\n      if (error) {\n        channels.error.publish(error);\n      } else if (response) {\n        channels.response.publish(response);\n      }\n    }\n  }\n\n  request.use = function use(newMiddleware) {\n    if (!newMiddleware) {\n      throw new Error('Tried to add middleware that resolved to falsey value');\n    }\n\n    if (typeof newMiddleware === 'function') {\n      throw new Error('Tried to add middleware that was a function. It probably expects you to pass options to it.');\n    }\n\n    if (newMiddleware.onReturn && middleware.onReturn.length > 0) {\n      throw new Error('Tried to add new middleware with `onReturn` handler, but another handler has already been registered for this event');\n    }\n\n    middlehooks.forEach(function (key) {\n      if (newMiddleware[key]) {\n        middleware[key].push(newMiddleware[key]);\n      }\n    });\n\n    loadedMiddleware.push(newMiddleware);\n    return request;\n  };\n\n  request.clone = function clone() {\n    return createRequester(loadedMiddleware);\n  };\n\n  initMiddleware.forEach(request.use);\n\n  return request;\n};\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack:///./node_modules/get-it/lib/index.js?");

/***/ }),

/***/ "./node_modules/get-it/lib/middleware/defaultOptionsProcessor.js":
/*!***********************************************************************!*\
  !*** ./node_modules/get-it/lib/middleware/defaultOptionsProcessor.js ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar objectAssign = __webpack_require__(/*! object-assign */ \"./node_modules/object-assign/index.js\");\nvar urlParse = __webpack_require__(/*! url-parse */ \"./node_modules/url-parse/index.js\");\n\nvar isReactNative = typeof navigator === 'undefined' ? false : navigator.product === 'ReactNative';\n\nvar has = Object.prototype.hasOwnProperty;\nvar defaultOptions = { timeout: isReactNative ? 60000 : 120000 };\n\nmodule.exports = function (opts) {\n  var options = typeof opts === 'string' ? objectAssign({ url: opts }, defaultOptions) : objectAssign({}, defaultOptions, opts);\n\n  // Parse URL into parts\n  var url = urlParse(options.url, {}, // Don't use current browser location\n  true // Parse query strings\n  );\n\n  // Normalize timeouts\n  options.timeout = normalizeTimeout(options.timeout);\n\n  // Shallow-merge (override) existing query params\n  if (options.query) {\n    url.query = objectAssign({}, url.query, removeUndefined(options.query));\n  }\n\n  // Implicit POST if we have not specified a method but have a body\n  options.method = options.body && !options.method ? 'POST' : (options.method || 'GET').toUpperCase();\n\n  // Stringify URL\n  options.url = url.toString(stringifyQueryString);\n\n  return options;\n};\n\nfunction stringifyQueryString(obj) {\n  var pairs = [];\n  for (var key in obj) {\n    if (has.call(obj, key)) {\n      push(key, obj[key]);\n    }\n  }\n\n  return pairs.length ? pairs.join('&') : '';\n\n  function push(key, val) {\n    if (Array.isArray(val)) {\n      val.forEach(function (item) {\n        return push(key, item);\n      });\n    } else {\n      pairs.push([key, val].map(encodeURIComponent).join('='));\n    }\n  }\n}\n\nfunction normalizeTimeout(time) {\n  if (time === false || time === 0) {\n    return false;\n  }\n\n  if (time.connect || time.socket) {\n    return time;\n  }\n\n  var delay = Number(time);\n  if (isNaN(delay)) {\n    return normalizeTimeout(defaultOptions.timeout);\n  }\n\n  return { connect: delay, socket: delay };\n}\n\nfunction removeUndefined(obj) {\n  var target = {};\n  for (var key in obj) {\n    if (obj[key] !== undefined) {\n      target[key] = obj[key];\n    }\n  }\n  return target;\n}\n//# sourceMappingURL=defaultOptionsProcessor.js.map\n\n//# sourceURL=webpack:///./node_modules/get-it/lib/middleware/defaultOptionsProcessor.js?");

/***/ }),

/***/ "./node_modules/get-it/lib/middleware/defaultOptionsValidator.js":
/*!***********************************************************************!*\
  !*** ./node_modules/get-it/lib/middleware/defaultOptionsValidator.js ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar validUrl = /^https?:\\/\\//i;\n\nmodule.exports = function (options) {\n  if (!validUrl.test(options.url)) {\n    throw new Error(\"\\\"\" + options.url + \"\\\" is not a valid URL\");\n  }\n};\n//# sourceMappingURL=defaultOptionsValidator.js.map\n\n//# sourceURL=webpack:///./node_modules/get-it/lib/middleware/defaultOptionsValidator.js?");

/***/ }),

/***/ "./node_modules/get-it/lib/middleware/jsonRequest.js":
/*!***********************************************************!*\
  !*** ./node_modules/get-it/lib/middleware/jsonRequest.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar objectAssign = __webpack_require__(/*! object-assign */ \"./node_modules/object-assign/index.js\");\nvar isPlainObject = __webpack_require__(/*! is-plain-object */ \"./node_modules/is-plain-object/index.js\");\n\nvar serializeTypes = ['boolean', 'string', 'number'];\nvar isBuffer = function isBuffer(obj) {\n  return !!obj.constructor && typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj);\n};\n\nmodule.exports = function () {\n  return {\n    processOptions: function processOptions(options) {\n      var body = options.body;\n      if (!body) {\n        return options;\n      }\n\n      var isStream = typeof body.pipe === 'function';\n      var shouldSerialize = !isStream && !isBuffer(body) && (serializeTypes.indexOf(typeof body === 'undefined' ? 'undefined' : _typeof(body)) !== -1 || Array.isArray(body) || isPlainObject(body));\n\n      if (!shouldSerialize) {\n        return options;\n      }\n\n      return objectAssign({}, options, {\n        body: JSON.stringify(options.body),\n        headers: objectAssign({}, options.headers, {\n          'Content-Type': 'application/json'\n        })\n      });\n    }\n  };\n};\n//# sourceMappingURL=jsonRequest.js.map\n\n//# sourceURL=webpack:///./node_modules/get-it/lib/middleware/jsonRequest.js?");

/***/ }),

/***/ "./node_modules/get-it/lib/middleware/jsonResponse.js":
/*!************************************************************!*\
  !*** ./node_modules/get-it/lib/middleware/jsonResponse.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar objectAssign = __webpack_require__(/*! object-assign */ \"./node_modules/object-assign/index.js\");\n\nmodule.exports = function () {\n  return {\n    onResponse: function onResponse(response) {\n      var contentType = response.headers['content-type'];\n      if (!response.body || !contentType || contentType.indexOf('application/json') === -1) {\n        return response;\n      }\n\n      return objectAssign({}, response, { body: tryParse(response.body) });\n    },\n\n    processOptions: function processOptions(options) {\n      return objectAssign({}, options, {\n        headers: objectAssign({ Accept: 'application/json' }, options.headers)\n      });\n    }\n  };\n};\n\nfunction tryParse(body) {\n  try {\n    return JSON.parse(body);\n  } catch (err) {\n    err.message = 'Failed to parsed response body as JSON: ' + err.message;\n    throw err;\n  }\n}\n//# sourceMappingURL=jsonResponse.js.map\n\n//# sourceURL=webpack:///./node_modules/get-it/lib/middleware/jsonResponse.js?");

/***/ }),

/***/ "./node_modules/get-it/lib/middleware/observable.js":
/*!**********************************************************!*\
  !*** ./node_modules/get-it/lib/middleware/observable.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar global = __webpack_require__(/*! ../util/global */ \"./node_modules/get-it/lib/util/global.js\");\nvar objectAssign = __webpack_require__(/*! object-assign */ \"./node_modules/object-assign/index.js\");\n\nmodule.exports = function () {\n  var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  var Observable = opts.implementation || global.Observable;\n  if (!Observable) {\n    throw new Error('`Observable` is not available in global scope, and no implementation was passed');\n  }\n\n  return {\n    onReturn: function onReturn(channels, context) {\n      return new Observable(function (observer) {\n        channels.error.subscribe(function (err) {\n          return observer.error(err);\n        });\n        channels.progress.subscribe(function (event) {\n          return observer.next(objectAssign({ type: 'progress' }, event));\n        });\n        channels.response.subscribe(function (response) {\n          observer.next(objectAssign({ type: 'response' }, response));\n          observer.complete();\n        });\n\n        channels.request.publish(context);\n        return function () {\n          return channels.abort.publish();\n        };\n      });\n    }\n  };\n};\n//# sourceMappingURL=observable.js.map\n\n//# sourceURL=webpack:///./node_modules/get-it/lib/middleware/observable.js?");

/***/ }),

/***/ "./node_modules/get-it/lib/middleware/progress/browser-progress.js":
/*!*************************************************************************!*\
  !*** ./node_modules/get-it/lib/middleware/progress/browser-progress.js ***!
  \*************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nmodule.exports = function () {\n  return {\n    onRequest: function onRequest(evt) {\n      if (evt.adapter !== 'xhr') {\n        return;\n      }\n\n      var xhr = evt.request;\n      var context = evt.context;\n\n      if ('upload' in xhr && 'onprogress' in xhr.upload) {\n        xhr.upload.onprogress = handleProgress('upload');\n      }\n\n      if ('onprogress' in xhr) {\n        xhr.onprogress = handleProgress('download');\n      }\n\n      function handleProgress(stage) {\n        return function (event) {\n          var percent = event.lengthComputable ? event.loaded / event.total * 100 : -1;\n          context.channels.progress.publish({\n            stage: stage,\n            percent: percent,\n            total: event.total,\n            loaded: event.loaded,\n            lengthComputable: event.lengthComputable\n          });\n        };\n      }\n    }\n  };\n};\n//# sourceMappingURL=browser-progress.js.map\n\n//# sourceURL=webpack:///./node_modules/get-it/lib/middleware/progress/browser-progress.js?");

/***/ }),

/***/ "./node_modules/get-it/lib/middleware/progress/index.js":
/*!**************************************************************!*\
  !*** ./node_modules/get-it/lib/middleware/progress/index.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nmodule.exports = __webpack_require__(/*! ./node-progress */ \"./node_modules/get-it/lib/middleware/progress/browser-progress.js\");\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack:///./node_modules/get-it/lib/middleware/progress/index.js?");

/***/ }),

/***/ "./node_modules/get-it/lib/request/browser-request.js":
/*!************************************************************!*\
  !*** ./node_modules/get-it/lib/request/browser-request.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/* eslint max-depth: [\"error\", 4] */\nvar sameOrigin = __webpack_require__(/*! same-origin */ \"./node_modules/same-origin/index.js\");\nvar parseHeaders = __webpack_require__(/*! parse-headers */ \"./node_modules/parse-headers/parse-headers.js\");\nvar noop = function noop() {/* intentional noop */};\n\nvar win = window;\nvar XmlHttpRequest = win.XMLHttpRequest || noop;\nvar hasXhr2 = 'withCredentials' in new XmlHttpRequest();\nvar XDomainRequest = hasXhr2 ? XmlHttpRequest : win.XDomainRequest;\nvar adapter = 'xhr';\n\nmodule.exports = function (context, callback) {\n  var options = context.options;\n  var timers = {};\n\n  // Deep-checking window.location because of react native, where `location` doesn't exist\n  var cors = win && win.location && !sameOrigin(win.location.href, options.url);\n\n  // Allow middleware to inject a response, for instance in the case of caching or mocking\n  var injectedResponse = context.applyMiddleware('interceptRequest', undefined, {\n    adapter: adapter,\n    context: context\n  });\n\n  // If middleware injected a response, treat it as we normally would and return it\n  // Do note that the injected response has to be reduced to a cross-environment friendly response\n  if (injectedResponse) {\n    var cbTimer = setTimeout(callback, 0, null, injectedResponse);\n    var cancel = function cancel() {\n      return clearTimeout(cbTimer);\n    };\n    return { abort: cancel };\n  }\n\n  // We'll want to null out the request on success/failure\n  var xhr = cors ? new XDomainRequest() : new XmlHttpRequest();\n\n  var isXdr = win.XDomainRequest && xhr instanceof win.XDomainRequest;\n  var headers = options.headers;\n\n  // Request state\n  var aborted = false;\n  var loaded = false;\n  var timedOut = false;\n\n  // Apply event handlers\n  xhr.onerror = onError;\n  xhr.ontimeout = onError;\n  xhr.onabort = function () {\n    aborted = true;\n  };\n\n  // IE9 must have onprogress be set to a unique function\n  xhr.onprogress = function () {/* intentional noop */};\n\n  var loadEvent = isXdr ? 'onload' : 'onreadystatechange';\n  xhr[loadEvent] = function () {\n    // Prevent request from timing out\n    resetTimers();\n\n    if (aborted || xhr.readyState !== 4 && !isXdr) {\n      return;\n    }\n\n    // Will be handled by onError\n    if (xhr.status === 0) {\n      return;\n    }\n\n    onLoad();\n  };\n\n  // @todo two last options to open() is username/password\n  xhr.open(options.method, options.url, true // Always async\n  );\n\n  // Some options need to be applied after open\n  xhr.withCredentials = !!options.withCredentials;\n\n  // Set headers\n  if (headers && xhr.setRequestHeader) {\n    for (var key in headers) {\n      if (headers.hasOwnProperty(key)) {\n        xhr.setRequestHeader(key, headers[key]);\n      }\n    }\n  } else if (headers && isXdr) {\n    throw new Error('Headers cannot be set on an XDomainRequest object');\n  }\n\n  if (options.rawBody) {\n    xhr.responseType = 'arraybuffer';\n  }\n\n  // Let middleware know we're about to do a request\n  context.applyMiddleware('onRequest', { options: options, adapter: adapter, request: xhr, context: context });\n\n  xhr.send(options.body || null);\n\n  // Figure out which timeouts to use (if any)\n  var delays = options.timeout;\n  if (delays) {\n    timers.connect = setTimeout(function () {\n      return timeoutRequest('ETIMEDOUT');\n    }, delays.connect);\n  }\n\n  return { abort: abort };\n\n  function abort() {\n    aborted = true;\n\n    if (xhr) {\n      xhr.abort();\n    }\n  }\n\n  function timeoutRequest(code) {\n    timedOut = true;\n    xhr.abort();\n    var error = new Error(code === 'ESOCKETTIMEDOUT' ? 'Socket timed out on request to ' + options.url : 'Connection timed out on request to ' + options.url);\n    error.code = code;\n    context.channels.error.publish(error);\n  }\n\n  function resetTimers() {\n    if (!delays) {\n      return;\n    }\n\n    stopTimers();\n    timers.socket = setTimeout(function () {\n      return timeoutRequest('ESOCKETTIMEDOUT');\n    }, delays.socket);\n  }\n\n  function stopTimers() {\n    // Only clear the connect timeout if we've got a connection\n    if (aborted || xhr.readyState >= 2 && timers.connect) {\n      clearTimeout(timers.connect);\n    }\n\n    if (timers.socket) {\n      clearTimeout(timers.socket);\n    }\n  }\n\n  function onError() {\n    if (loaded) {\n      return;\n    }\n\n    // Clean up\n    stopTimers();\n    loaded = true;\n    xhr = null;\n\n    // Annoyingly, details are extremely scarce and hidden from us.\n    // We only really know that it is a network error\n    var err = new Error('Network error while attempting to reach ' + options.url);\n    err.isNetworkError = true;\n    err.request = options;\n    callback(err);\n  }\n\n  function reduceResponse() {\n    var statusCode = xhr.status;\n    var statusMessage = xhr.statusText;\n\n    if (isXdr && statusCode === undefined) {\n      // IE8 CORS GET successful response doesn't have a status field, but body is fine\n      statusCode = 200;\n    } else if (statusCode > 12000 && statusCode < 12156) {\n      // Yet another IE quirk where it emits weird status codes on network errors\n      // https://support.microsoft.com/en-us/kb/193625\n      return onError();\n    } else {\n      // Another IE bug where HTTP 204 somehow ends up as 1223\n      statusCode = xhr.status === 1223 ? 204 : xhr.status;\n      statusMessage = xhr.status === 1223 ? 'No Content' : statusMessage;\n    }\n\n    return {\n      body: xhr.response || xhr.responseText,\n      url: options.url,\n      method: options.method,\n      headers: isXdr ? {} : parseHeaders(xhr.getAllResponseHeaders()),\n      statusCode: statusCode,\n      statusMessage: statusMessage\n    };\n  }\n\n  function onLoad() {\n    if (aborted || loaded || timedOut) {\n      return;\n    }\n\n    if (xhr.status === 0) {\n      onError(new Error('Unknown XHR error'));\n      return;\n    }\n\n    // Prevent being called twice\n    stopTimers();\n    loaded = true;\n    callback(null, reduceResponse());\n  }\n};\n//# sourceMappingURL=browser-request.js.map\n\n//# sourceURL=webpack:///./node_modules/get-it/lib/request/browser-request.js?");

/***/ }),

/***/ "./node_modules/get-it/lib/request/index.js":
/*!**************************************************!*\
  !*** ./node_modules/get-it/lib/request/index.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nmodule.exports = __webpack_require__(/*! ./node-request */ \"./node_modules/get-it/lib/request/browser-request.js\");\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack:///./node_modules/get-it/lib/request/index.js?");

/***/ }),

/***/ "./node_modules/get-it/lib/util/global.js":
/*!************************************************!*\
  !*** ./node_modules/get-it/lib/util/global.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(global) {\n\n/* eslint-disable no-negated-condition */\nif (typeof window !== 'undefined') {\n  module.exports = window;\n} else if (typeof global !== 'undefined') {\n  module.exports = global;\n} else if (typeof self !== 'undefined') {\n  module.exports = self;\n} else {\n  module.exports = {};\n}\n//# sourceMappingURL=global.js.map\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\")))\n\n//# sourceURL=webpack:///./node_modules/get-it/lib/util/global.js?");

/***/ }),

/***/ "./node_modules/get-it/lib/util/middlewareReducer.js":
/*!***********************************************************!*\
  !*** ./node_modules/get-it/lib/util/middlewareReducer.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nmodule.exports = function (middleware) {\n  var applyMiddleware = function applyMiddleware(hook, defaultValue) {\n    for (var _len = arguments.length, args = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n      args[_key - 2] = arguments[_key];\n    }\n\n    return middleware[hook].reduce(function (value, handler) {\n      return handler.apply(undefined, [value].concat(args));\n    }, defaultValue);\n  };\n\n  return applyMiddleware;\n};\n//# sourceMappingURL=middlewareReducer.js.map\n\n//# sourceURL=webpack:///./node_modules/get-it/lib/util/middlewareReducer.js?");

/***/ }),

/***/ "./node_modules/is-function/index.js":
/*!*******************************************!*\
  !*** ./node_modules/is-function/index.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = isFunction\n\nvar toString = Object.prototype.toString\n\nfunction isFunction (fn) {\n  var string = toString.call(fn)\n  return string === '[object Function]' ||\n    (typeof fn === 'function' && string !== '[object RegExp]') ||\n    (typeof window !== 'undefined' &&\n     // IE8 and below\n     (fn === window.setTimeout ||\n      fn === window.alert ||\n      fn === window.confirm ||\n      fn === window.prompt))\n};\n\n\n//# sourceURL=webpack:///./node_modules/is-function/index.js?");

/***/ }),

/***/ "./node_modules/is-obj/index.js":
/*!**************************************!*\
  !*** ./node_modules/is-obj/index.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nmodule.exports = function (x) {\n\tvar type = typeof x;\n\treturn x !== null && (type === 'object' || type === 'function');\n};\n\n\n//# sourceURL=webpack:///./node_modules/is-obj/index.js?");

/***/ }),

/***/ "./node_modules/is-plain-object/index.js":
/*!***********************************************!*\
  !*** ./node_modules/is-plain-object/index.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/*!\n * is-plain-object <https://github.com/jonschlinkert/is-plain-object>\n *\n * Copyright (c) 2014-2017, Jon Schlinkert.\n * Released under the MIT License.\n */\n\n\n\nvar isObject = __webpack_require__(/*! isobject */ \"./node_modules/isobject/index.js\");\n\nfunction isObjectObject(o) {\n  return isObject(o) === true\n    && Object.prototype.toString.call(o) === '[object Object]';\n}\n\nmodule.exports = function isPlainObject(o) {\n  var ctor,prot;\n\n  if (isObjectObject(o) === false) return false;\n\n  // If has modified constructor\n  ctor = o.constructor;\n  if (typeof ctor !== 'function') return false;\n\n  // If has modified prototype\n  prot = ctor.prototype;\n  if (isObjectObject(prot) === false) return false;\n\n  // If constructor does not have an Object-specific method\n  if (prot.hasOwnProperty('isPrototypeOf') === false) {\n    return false;\n  }\n\n  // Most likely a plain Object\n  return true;\n};\n\n\n//# sourceURL=webpack:///./node_modules/is-plain-object/index.js?");

/***/ }),

/***/ "./node_modules/isobject/index.js":
/*!****************************************!*\
  !*** ./node_modules/isobject/index.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/*!\n * isobject <https://github.com/jonschlinkert/isobject>\n *\n * Copyright (c) 2014-2017, Jon Schlinkert.\n * Released under the MIT License.\n */\n\n\n\nmodule.exports = function isObject(val) {\n  return val != null && typeof val === 'object' && Array.isArray(val) === false;\n};\n\n\n//# sourceURL=webpack:///./node_modules/isobject/index.js?");

/***/ }),

/***/ "./node_modules/make-error/index.js":
/*!******************************************!*\
  !*** ./node_modules/make-error/index.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("// ISC @ Julien Fontanet\n\n\n\n// ===================================================================\n\nvar construct = typeof Reflect !== 'undefined' ? Reflect.construct : undefined\nvar defineProperty = Object.defineProperty\n\n// -------------------------------------------------------------------\n\nvar captureStackTrace = Error.captureStackTrace\nif (captureStackTrace === undefined) {\n  captureStackTrace = function captureStackTrace (error) {\n    var container = new Error()\n\n    defineProperty(error, 'stack', {\n      configurable: true,\n      get: function getStack () {\n        var stack = container.stack\n\n        // Replace property with value for faster future accesses.\n        defineProperty(this, 'stack', {\n          configurable: true,\n          value: stack,\n          writable: true\n        })\n\n        return stack\n      },\n      set: function setStack (stack) {\n        defineProperty(error, 'stack', {\n          configurable: true,\n          value: stack,\n          writable: true\n        })\n      }\n    })\n  }\n}\n\n// -------------------------------------------------------------------\n\nfunction BaseError (message) {\n  if (message !== undefined) {\n    defineProperty(this, 'message', {\n      configurable: true,\n      value: message,\n      writable: true\n    })\n  }\n\n  var cname = this.constructor.name\n  if (\n    cname !== undefined &&\n    cname !== this.name\n  ) {\n    defineProperty(this, 'name', {\n      configurable: true,\n      value: cname,\n      writable: true\n    })\n  }\n\n  captureStackTrace(this, this.constructor)\n}\n\nBaseError.prototype = Object.create(Error.prototype, {\n  // See: https://github.com/JsCommunity/make-error/issues/4\n  constructor: {\n    configurable: true,\n    value: BaseError,\n    writable: true\n  }\n})\n\n// -------------------------------------------------------------------\n\n// Sets the name of a function if possible (depends of the JS engine).\nvar setFunctionName = (function () {\n  function setFunctionName (fn, name) {\n    return defineProperty(fn, 'name', {\n      configurable: true,\n      value: name\n    })\n  }\n  try {\n    var f = function () {}\n    setFunctionName(f, 'foo')\n    if (f.name === 'foo') {\n      return setFunctionName\n    }\n  } catch (_) {}\n})()\n\n// -------------------------------------------------------------------\n\nfunction makeError (constructor, super_) {\n  if (super_ == null || super_ === Error) {\n    super_ = BaseError\n  } else if (typeof super_ !== 'function') {\n    throw new TypeError('super_ should be a function')\n  }\n\n  var name\n  if (typeof constructor === 'string') {\n    name = constructor\n    constructor = construct !== undefined\n      ? function () { return construct(super_, arguments, this.constructor) }\n      : function () { super_.apply(this, arguments) }\n\n    // If the name can be set, do it once and for all.\n    if (setFunctionName !== undefined) {\n      setFunctionName(constructor, name)\n      name = undefined\n    }\n  } else if (typeof constructor !== 'function') {\n    throw new TypeError('constructor should be either a string or a function')\n  }\n\n  // Also register the super constructor also as `constructor.super_` just\n  // like Node's `util.inherits()`.\n  constructor.super_ = constructor['super'] = super_\n\n  var properties = {\n    constructor: {\n      configurable: true,\n      value: constructor,\n      writable: true\n    }\n  }\n\n  // If the name could not be set on the constructor, set it on the\n  // prototype.\n  if (name !== undefined) {\n    properties.name = {\n      configurable: true,\n      value: name,\n      writable: true\n    }\n  }\n  constructor.prototype = Object.create(super_.prototype, properties)\n\n  return constructor\n}\nexports = module.exports = makeError\nexports.BaseError = BaseError\n\n\n//# sourceURL=webpack:///./node_modules/make-error/index.js?");

/***/ }),

/***/ "./node_modules/nano-pubsub/index.js":
/*!*******************************************!*\
  !*** ./node_modules/nano-pubsub/index.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function Pubsub() {\n  var subscribers = []\n  return {\n    subscribe: subscribe,\n    publish: publish\n  }\n  function subscribe(subscriber) {\n    subscribers.push(subscriber)\n    return function unsubscribe() {\n      var idx = subscribers.indexOf(subscriber)\n      if (idx > -1) {\n        subscribers.splice(idx, 1)\n      }\n    }\n  }\n  function publish() {\n    for (var i = 0; i < subscribers.length; i++) {\n      subscribers[i].apply(null, arguments)\n    }\n  }\n}\n\n//# sourceURL=webpack:///./node_modules/nano-pubsub/index.js?");

/***/ }),

/***/ "./node_modules/object-assign/index.js":
/*!*********************************************!*\
  !*** ./node_modules/object-assign/index.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n\n\n//# sourceURL=webpack:///./node_modules/object-assign/index.js?");

/***/ }),

/***/ "./node_modules/parse-headers/parse-headers.js":
/*!*****************************************************!*\
  !*** ./node_modules/parse-headers/parse-headers.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var trim = __webpack_require__(/*! trim */ \"./node_modules/trim/index.js\")\n  , forEach = __webpack_require__(/*! for-each */ \"./node_modules/for-each/index.js\")\n  , isArray = function(arg) {\n      return Object.prototype.toString.call(arg) === '[object Array]';\n    }\n\nmodule.exports = function (headers) {\n  if (!headers)\n    return {}\n\n  var result = {}\n\n  forEach(\n      trim(headers).split('\\n')\n    , function (row) {\n        var index = row.indexOf(':')\n          , key = trim(row.slice(0, index)).toLowerCase()\n          , value = trim(row.slice(index + 1))\n\n        if (typeof(result[key]) === 'undefined') {\n          result[key] = value\n        } else if (isArray(result[key])) {\n          result[key].push(value)\n        } else {\n          result[key] = [ result[key], value ]\n        }\n      }\n  )\n\n  return result\n}\n\n//# sourceURL=webpack:///./node_modules/parse-headers/parse-headers.js?");

/***/ }),

/***/ "./node_modules/querystringify/index.js":
/*!**********************************************!*\
  !*** ./node_modules/querystringify/index.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar has = Object.prototype.hasOwnProperty;\n\n/**\n * Decode a URI encoded string.\n *\n * @param {String} input The URI encoded string.\n * @returns {String} The decoded string.\n * @api private\n */\nfunction decode(input) {\n  return decodeURIComponent(input.replace(/\\+/g, ' '));\n}\n\n/**\n * Simple query string parser.\n *\n * @param {String} query The query string that needs to be parsed.\n * @returns {Object}\n * @api public\n */\nfunction querystring(query) {\n  var parser = /([^=?&]+)=?([^&]*)/g\n    , result = {}\n    , part;\n\n  while (part = parser.exec(query)) {\n    var key = decode(part[1])\n      , value = decode(part[2]);\n\n    //\n    // Prevent overriding of existing properties. This ensures that build-in\n    // methods like `toString` or __proto__ are not overriden by malicious\n    // querystrings.\n    //\n    if (key in result) continue;\n    result[key] = value;\n  }\n\n  return result;\n}\n\n/**\n * Transform a query string to an object.\n *\n * @param {Object} obj Object that should be transformed.\n * @param {String} prefix Optional prefix.\n * @returns {String}\n * @api public\n */\nfunction querystringify(obj, prefix) {\n  prefix = prefix || '';\n\n  var pairs = [];\n\n  //\n  // Optionally prefix with a '?' if needed\n  //\n  if ('string' !== typeof prefix) prefix = '?';\n\n  for (var key in obj) {\n    if (has.call(obj, key)) {\n      pairs.push(encodeURIComponent(key) +'='+ encodeURIComponent(obj[key]));\n    }\n  }\n\n  return pairs.length ? prefix + pairs.join('&') : '';\n}\n\n//\n// Expose the module.\n//\nexports.stringify = querystringify;\nexports.parse = querystring;\n\n\n//# sourceURL=webpack:///./node_modules/querystringify/index.js?");

/***/ }),

/***/ "./node_modules/requires-port/index.js":
/*!*********************************************!*\
  !*** ./node_modules/requires-port/index.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/**\n * Check if we're required to add a port number.\n *\n * @see https://url.spec.whatwg.org/#default-port\n * @param {Number|String} port Port number we need to check\n * @param {String} protocol Protocol we need to check against.\n * @returns {Boolean} Is it a default port for the given protocol\n * @api private\n */\nmodule.exports = function required(port, protocol) {\n  protocol = protocol.split(':')[0];\n  port = +port;\n\n  if (!port) return false;\n\n  switch (protocol) {\n    case 'http':\n    case 'ws':\n    return port !== 80;\n\n    case 'https':\n    case 'wss':\n    return port !== 443;\n\n    case 'ftp':\n    return port !== 21;\n\n    case 'gopher':\n    return port !== 70;\n\n    case 'file':\n    return false;\n  }\n\n  return port !== 0;\n};\n\n\n//# sourceURL=webpack:///./node_modules/requires-port/index.js?");

/***/ }),

/***/ "./node_modules/same-origin/index.js":
/*!*******************************************!*\
  !*** ./node_modules/same-origin/index.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar url = __webpack_require__(/*! url */ \"./node_modules/same-origin/url-parser.js\");\n\nmodule.exports = function(uri1, uri2, ieMode) {\n    if (uri1 === uri2) {\n        return true;\n    }\n\n    var url1 = url.parse(uri1, false, true);\n    var url2 = url.parse(uri2, false, true);\n\n    var url1Port = url1.port|0 || (url1.protocol === 'https' ? 443 : 80);\n    var url2Port = url2.port|0 || (url2.protocol === 'https' ? 443 : 80);\n\n    var match = {\n        proto: url1.protocol === url2.protocol,\n        hostname: url1.hostname === url2.hostname,\n        port: url1Port === url2Port\n    };\n\n    return ((match.proto && match.hostname) && (match.port || ieMode));\n};\n\n//# sourceURL=webpack:///./node_modules/same-origin/index.js?");

/***/ }),

/***/ "./node_modules/same-origin/url-parser.js":
/*!************************************************!*\
  !*** ./node_modules/same-origin/url-parser.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/**\n * This file is only used for the browser version of `same-origin`.\n * Used to bring down the size of the browser bundle.\n */\n\n\nvar regex = /^(?:(?:(?:([^:\\/#\\?]+:)?(?:(?:\\/\\/)((?:((?:[^:@\\/#\\?]+)(?:\\:(?:[^:@\\/#\\?]+))?)@)?(([^:\\/#\\?\\]\\[]+|\\[[^\\/\\]@#?]+\\])(?:\\:([0-9]+))?))?)?)?((?:\\/?(?:[^\\/\\?#]+\\/+)*)(?:[^\\?#]*)))?(\\?[^#]+)?)(#.*)?/;\n\nmodule.exports = {\n    regex: regex,\n    parse: function(url) {\n        var match = regex.exec(url);\n        if (!match) {\n            return {};\n        }\n\n        return {\n            protocol: (match[1] || '').toLowerCase() || undefined,\n            hostname: (match[5] || '').toLowerCase() || undefined,\n            port: match[6] || undefined\n        };\n    }\n};\n\n//# sourceURL=webpack:///./node_modules/same-origin/url-parser.js?");

/***/ }),

/***/ "./node_modules/trim/index.js":
/*!************************************!*\
  !*** ./node_modules/trim/index.js ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("\nexports = module.exports = trim;\n\nfunction trim(str){\n  return str.replace(/^\\s*|\\s*$/g, '');\n}\n\nexports.left = function(str){\n  return str.replace(/^\\s*/, '');\n};\n\nexports.right = function(str){\n  return str.replace(/\\s*$/, '');\n};\n\n\n//# sourceURL=webpack:///./node_modules/trim/index.js?");

/***/ }),

/***/ "./node_modules/url-parse/index.js":
/*!*****************************************!*\
  !*** ./node_modules/url-parse/index.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(global) {\n\nvar required = __webpack_require__(/*! requires-port */ \"./node_modules/requires-port/index.js\")\n  , qs = __webpack_require__(/*! querystringify */ \"./node_modules/querystringify/index.js\")\n  , protocolre = /^([a-z][a-z0-9.+-]*:)?(\\/\\/)?([\\S\\s]*)/i\n  , slashes = /^[A-Za-z][A-Za-z0-9+-.]*:\\/\\//;\n\n/**\n * These are the parse rules for the URL parser, it informs the parser\n * about:\n *\n * 0. The char it Needs to parse, if it's a string it should be done using\n *    indexOf, RegExp using exec and NaN means set as current value.\n * 1. The property we should set when parsing this value.\n * 2. Indication if it's backwards or forward parsing, when set as number it's\n *    the value of extra chars that should be split off.\n * 3. Inherit from location if non existing in the parser.\n * 4. `toLowerCase` the resulting value.\n */\nvar rules = [\n  ['#', 'hash'],                        // Extract from the back.\n  ['?', 'query'],                       // Extract from the back.\n  ['/', 'pathname'],                    // Extract from the back.\n  ['@', 'auth', 1],                     // Extract from the front.\n  [NaN, 'host', undefined, 1, 1],       // Set left over value.\n  [/:(\\d+)$/, 'port', undefined, 1],    // RegExp the back.\n  [NaN, 'hostname', undefined, 1, 1]    // Set left over.\n];\n\n/**\n * These properties should not be copied or inherited from. This is only needed\n * for all non blob URL's as a blob URL does not include a hash, only the\n * origin.\n *\n * @type {Object}\n * @private\n */\nvar ignore = { hash: 1, query: 1 };\n\n/**\n * The location object differs when your code is loaded through a normal page,\n * Worker or through a worker using a blob. And with the blobble begins the\n * trouble as the location object will contain the URL of the blob, not the\n * location of the page where our code is loaded in. The actual origin is\n * encoded in the `pathname` so we can thankfully generate a good \"default\"\n * location from it so we can generate proper relative URL's again.\n *\n * @param {Object|String} loc Optional default location object.\n * @returns {Object} lolcation object.\n * @api public\n */\nfunction lolcation(loc) {\n  loc = loc || global.location || {};\n\n  var finaldestination = {}\n    , type = typeof loc\n    , key;\n\n  if ('blob:' === loc.protocol) {\n    finaldestination = new URL(unescape(loc.pathname), {});\n  } else if ('string' === type) {\n    finaldestination = new URL(loc, {});\n    for (key in ignore) delete finaldestination[key];\n  } else if ('object' === type) {\n    for (key in loc) {\n      if (key in ignore) continue;\n      finaldestination[key] = loc[key];\n    }\n\n    if (finaldestination.slashes === undefined) {\n      finaldestination.slashes = slashes.test(loc.href);\n    }\n  }\n\n  return finaldestination;\n}\n\n/**\n * @typedef ProtocolExtract\n * @type Object\n * @property {String} protocol Protocol matched in the URL, in lowercase.\n * @property {Boolean} slashes `true` if protocol is followed by \"//\", else `false`.\n * @property {String} rest Rest of the URL that is not part of the protocol.\n */\n\n/**\n * Extract protocol information from a URL with/without double slash (\"//\").\n *\n * @param {String} address URL we want to extract from.\n * @return {ProtocolExtract} Extracted information.\n * @api private\n */\nfunction extractProtocol(address) {\n  var match = protocolre.exec(address);\n\n  return {\n    protocol: match[1] ? match[1].toLowerCase() : '',\n    slashes: !!match[2],\n    rest: match[3]\n  };\n}\n\n/**\n * Resolve a relative URL pathname against a base URL pathname.\n *\n * @param {String} relative Pathname of the relative URL.\n * @param {String} base Pathname of the base URL.\n * @return {String} Resolved pathname.\n * @api private\n */\nfunction resolve(relative, base) {\n  var path = (base || '/').split('/').slice(0, -1).concat(relative.split('/'))\n    , i = path.length\n    , last = path[i - 1]\n    , unshift = false\n    , up = 0;\n\n  while (i--) {\n    if (path[i] === '.') {\n      path.splice(i, 1);\n    } else if (path[i] === '..') {\n      path.splice(i, 1);\n      up++;\n    } else if (up) {\n      if (i === 0) unshift = true;\n      path.splice(i, 1);\n      up--;\n    }\n  }\n\n  if (unshift) path.unshift('');\n  if (last === '.' || last === '..') path.push('');\n\n  return path.join('/');\n}\n\n/**\n * The actual URL instance. Instead of returning an object we've opted-in to\n * create an actual constructor as it's much more memory efficient and\n * faster and it pleases my OCD.\n *\n * @constructor\n * @param {String} address URL we want to parse.\n * @param {Object|String} location Location defaults for relative paths.\n * @param {Boolean|Function} parser Parser for the query string.\n * @api public\n */\nfunction URL(address, location, parser) {\n  if (!(this instanceof URL)) {\n    return new URL(address, location, parser);\n  }\n\n  var relative, extracted, parse, instruction, index, key\n    , instructions = rules.slice()\n    , type = typeof location\n    , url = this\n    , i = 0;\n\n  //\n  // The following if statements allows this module two have compatibility with\n  // 2 different API:\n  //\n  // 1. Node.js's `url.parse` api which accepts a URL, boolean as arguments\n  //    where the boolean indicates that the query string should also be parsed.\n  //\n  // 2. The `URL` interface of the browser which accepts a URL, object as\n  //    arguments. The supplied object will be used as default values / fall-back\n  //    for relative paths.\n  //\n  if ('object' !== type && 'string' !== type) {\n    parser = location;\n    location = null;\n  }\n\n  if (parser && 'function' !== typeof parser) parser = qs.parse;\n\n  location = lolcation(location);\n\n  //\n  // Extract protocol information before running the instructions.\n  //\n  extracted = extractProtocol(address || '');\n  relative = !extracted.protocol && !extracted.slashes;\n  url.slashes = extracted.slashes || relative && location.slashes;\n  url.protocol = extracted.protocol || location.protocol || '';\n  address = extracted.rest;\n\n  //\n  // When the authority component is absent the URL starts with a path\n  // component.\n  //\n  if (!extracted.slashes) instructions[2] = [/(.*)/, 'pathname'];\n\n  for (; i < instructions.length; i++) {\n    instruction = instructions[i];\n    parse = instruction[0];\n    key = instruction[1];\n\n    if (parse !== parse) {\n      url[key] = address;\n    } else if ('string' === typeof parse) {\n      if (~(index = address.indexOf(parse))) {\n        if ('number' === typeof instruction[2]) {\n          url[key] = address.slice(0, index);\n          address = address.slice(index + instruction[2]);\n        } else {\n          url[key] = address.slice(index);\n          address = address.slice(0, index);\n        }\n      }\n    } else if ((index = parse.exec(address))) {\n      url[key] = index[1];\n      address = address.slice(0, index.index);\n    }\n\n    url[key] = url[key] || (\n      relative && instruction[3] ? location[key] || '' : ''\n    );\n\n    //\n    // Hostname, host and protocol should be lowercased so they can be used to\n    // create a proper `origin`.\n    //\n    if (instruction[4]) url[key] = url[key].toLowerCase();\n  }\n\n  //\n  // Also parse the supplied query string in to an object. If we're supplied\n  // with a custom parser as function use that instead of the default build-in\n  // parser.\n  //\n  if (parser) url.query = parser(url.query);\n\n  //\n  // If the URL is relative, resolve the pathname against the base URL.\n  //\n  if (\n      relative\n    && location.slashes\n    && url.pathname.charAt(0) !== '/'\n    && (url.pathname !== '' || location.pathname !== '')\n  ) {\n    url.pathname = resolve(url.pathname, location.pathname);\n  }\n\n  //\n  // We should not add port numbers if they are already the default port number\n  // for a given protocol. As the host also contains the port number we're going\n  // override it with the hostname which contains no port number.\n  //\n  if (!required(url.port, url.protocol)) {\n    url.host = url.hostname;\n    url.port = '';\n  }\n\n  //\n  // Parse down the `auth` for the username and password.\n  //\n  url.username = url.password = '';\n  if (url.auth) {\n    instruction = url.auth.split(':');\n    url.username = instruction[0] || '';\n    url.password = instruction[1] || '';\n  }\n\n  url.origin = url.protocol && url.host && url.protocol !== 'file:'\n    ? url.protocol +'//'+ url.host\n    : 'null';\n\n  //\n  // The href is just the compiled result.\n  //\n  url.href = url.toString();\n}\n\n/**\n * This is convenience method for changing properties in the URL instance to\n * insure that they all propagate correctly.\n *\n * @param {String} part          Property we need to adjust.\n * @param {Mixed} value          The newly assigned value.\n * @param {Boolean|Function} fn  When setting the query, it will be the function\n *                               used to parse the query.\n *                               When setting the protocol, double slash will be\n *                               removed from the final url if it is true.\n * @returns {URL}\n * @api public\n */\nfunction set(part, value, fn) {\n  var url = this;\n\n  switch (part) {\n    case 'query':\n      if ('string' === typeof value && value.length) {\n        value = (fn || qs.parse)(value);\n      }\n\n      url[part] = value;\n      break;\n\n    case 'port':\n      url[part] = value;\n\n      if (!required(value, url.protocol)) {\n        url.host = url.hostname;\n        url[part] = '';\n      } else if (value) {\n        url.host = url.hostname +':'+ value;\n      }\n\n      break;\n\n    case 'hostname':\n      url[part] = value;\n\n      if (url.port) value += ':'+ url.port;\n      url.host = value;\n      break;\n\n    case 'host':\n      url[part] = value;\n\n      if (/:\\d+$/.test(value)) {\n        value = value.split(':');\n        url.port = value.pop();\n        url.hostname = value.join(':');\n      } else {\n        url.hostname = value;\n        url.port = '';\n      }\n\n      break;\n\n    case 'protocol':\n      url.protocol = value.toLowerCase();\n      url.slashes = !fn;\n      break;\n\n    case 'pathname':\n    case 'hash':\n      if (value) {\n        var char = part === 'pathname' ? '/' : '#';\n        url[part] = value.charAt(0) !== char ? char + value : value;\n      } else {\n        url[part] = value;\n      }\n      break;\n\n    default:\n      url[part] = value;\n  }\n\n  for (var i = 0; i < rules.length; i++) {\n    var ins = rules[i];\n\n    if (ins[4]) url[ins[1]] = url[ins[1]].toLowerCase();\n  }\n\n  url.origin = url.protocol && url.host && url.protocol !== 'file:'\n    ? url.protocol +'//'+ url.host\n    : 'null';\n\n  url.href = url.toString();\n\n  return url;\n}\n\n/**\n * Transform the properties back in to a valid and full URL string.\n *\n * @param {Function} stringify Optional query stringify function.\n * @returns {String}\n * @api public\n */\nfunction toString(stringify) {\n  if (!stringify || 'function' !== typeof stringify) stringify = qs.stringify;\n\n  var query\n    , url = this\n    , protocol = url.protocol;\n\n  if (protocol && protocol.charAt(protocol.length - 1) !== ':') protocol += ':';\n\n  var result = protocol + (url.slashes ? '//' : '');\n\n  if (url.username) {\n    result += url.username;\n    if (url.password) result += ':'+ url.password;\n    result += '@';\n  }\n\n  result += url.host + url.pathname;\n\n  query = 'object' === typeof url.query ? stringify(url.query) : url.query;\n  if (query) result += '?' !== query.charAt(0) ? '?'+ query : query;\n\n  if (url.hash) result += url.hash;\n\n  return result;\n}\n\nURL.prototype = { set: set, toString: toString };\n\n//\n// Expose the URL parser and some additional properties that might be useful for\n// others or testing.\n//\nURL.extractProtocol = extractProtocol;\nURL.location = lolcation;\nURL.qs = qs;\n\nmodule.exports = URL;\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\")))\n\n//# sourceURL=webpack:///./node_modules/url-parse/index.js?");

/***/ }),

/***/ "./node_modules/webpack/buildin/global.js":
/*!***********************************!*\
  !*** (webpack)/buildin/global.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\r\n} catch (e) {\r\n\t// This works if the window reference is available\r\n\tif (typeof window === \"object\") g = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n//# sourceURL=webpack:///(webpack)/buildin/global.js?");

/***/ })

/******/ });